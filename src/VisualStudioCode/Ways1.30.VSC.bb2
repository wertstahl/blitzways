;*****************************************************************
; comments moved to eof - Sourcecode uses Inline Bookmarks for VSC 
;----------------------------------------------------------------- 
; final version released on 27-JUN-2020

.boot: ;//@audit-ok Boot 

WBStartup               ;ALWAYS ON. (SAVES ONLY FEW BYTES, MAKES NO DIFFERENCE FOR DISK) 
                        ;HARDDISK FLAG REMOVED - ONLY WBSTARTUP IMPORTANT!

loaddir$="Ways:"
 
sfxON = 0               ; 1 = fx on -  music during start is off 
                        ; 0 = fx off - music during start is on

debug = 0               ; this enables levelskip by pressing "l"
boxval = 23             ; size of gfx clearing box -1 (--> boxf)
maxlevs = 52
Scorefail = 0           ; unable to decrypt scores flag reset

      WbToScreen 0
      Window 1,4,11,610,185,$1800," BlitzWays V1.31" ,0,1 ;status now in own window
      Use Window 1
;-----------------------------------------------------------------

      NPrint " <<<      --- ACHTUNG! ---       >>>"
      NPrint " Scores will only be saved after you"
      NPrint " end the game by pressing <ESCAPE> !"
      NPrint ""
      NPrint "  Yes, I understand:  <Click here>   "
      NPrint ""

      MouseWait

; Grafikteile laden
      Print " Loading Graphics "
      Print "." : LoadSprites 0,loaddir$+"gfx/MouseCursor16"
      Print "." : LoadShapes 1,loaddir$+"gfx/Assets.2020"
      Print "." : LoadShape 9,loaddir$+"gfx/Logo1.2",0
      Print "." : LoadShapes 10,loaddir$+"gfx/StoneSet.2020"
      Print "." : LoadShapes 140,loaddir$+"gfx/6x8fontcol.2019"
      Print "." : LoadShapes 240,loaddir$+"gfx/16x16fontcol202x"

      NPrint  " Done!" 
;-----------------------------------------------------------------

; Musik + Sound laden
      introtheme=0
      hiscoresong=1
      ingamesong=2
      lvlselectsong=3

      Print  " Loading Audio "

      success = LoadTrackerModule (introtheme,loaddir$+"music/mod.introduce my turbox")
      CurSONG = introtheme
      success = StartTracker (CurSONG)
      If sfxON = 1 Then PauseModule  ;1= sfx are on, music is off, pause the tune
      Print ">"
 
      success = LoadTrackerModule (hiscoresong,loaddir$+"music/mod.hiscore2")  ;original title "i save you"
      success = LoadTrackerModule (ingamesong,loaddir$+"music/mod.make my way2!deluxe")
      success = LoadTrackerModule (lvlselectsong,loaddir$+"music/mod.xm92wc")  ;original title "xmas '92 was cool"

      LoadSound  0,loaddir$+"music/sfx" : Print "." : sfxselect= 0
      LoadSound  1,loaddir$+"music/pause" : Print "." : sfxpause = 1
      LoadSound  2,loaddir$+"music/pick1st" : Print "." : sfxpicked1=2
      LoadSound  3,loaddir$+"music/pick2nd" : Print "." : sfxpicked2=3
      LoadSound  4,loaddir$+"music/levelover" : Print "." : sfxlvlover=4
      LoadSound  5,loaddir$+"music/wrongpos" : Print "." : sfxwrngpos=5
      LoadSound  6,loaddir$+"music/stoneup" : Print "." : sfxstoneup=6
      LoadSound  7,loaddir$+"music/winsound" : Print "." : sfxwon   = 7
      LoadSound  8,loaddir$+"music/logosound" : Print "." : sfxlogo  = 8
      LoadSound  9,loaddir$+"music/blip1" : Print "." : sfxblip1 = 9
      LoadSound 10,loaddir$+"music/blip2"
      LoadSound 11,loaddir$+"music/blip3"
      LoadSound 12,loaddir$+"music/gamelost" : Print "." : sfxgamelost=12
      LoadSound 13,loaddir$+"music/strayclavesfx" : Print "." : sfxstray=13
      LoadSound 14,loaddir$+"music/parp" : Print "." : sfxparp=14

      NPrint " Done!" 

;-----------------------------------------------------------------

      Print " Loading Scores ..."
      ScSav=1                       ;Scorespeichern erlauben (Wird nur von Cheat abgeschaltet)
      Gosub LoadScores              ;Scoreliste laden
      NPrint " Done!" : Nprint ""

;=================================================================
;*****************************************************************
;=================================================================

      Dim matrix(8,8)               ; Matrix (Leveltabelle)  = Zeile,Spalte
      Dim field(10,10)              ; Feld fuer Weg finden

      Dim snakex(64)                ; Tabellen fuer
      Dim snakey(64)                ;
      Dim snkind(64)                ; S N A K E tm

      Dim cu(16)                    ; Flashfarben
      Dim bu(16)                    ;
      Dim au(16)                    ;
      Dim flash(20)                 ;

      Dim fonttable(256)            ; Fonttabelle
      Dim kerntable(54)             ; Bigfont Kerning Table

      Dim Xmove(128)                ; Newscore x movement

      Dim Ybounc(50)                ; Pause Bounce y tab

      Dim BtextBuf(16)

                                    ;SELFPLAY
      Dim SPmatrix(7,7)
      Dim pairlist(64,4)            ;
      Dim pairlistgood(64,4)        ;

      Gosub Seed                    ; Selektives Palettecycling fuer Hempmode vorbereiten

      MousRest = 1                  ; Sterne folgen Mauszeiger-Delay Counter nach Mausbewegungsstop

;-----------------------------------------------------------------

      Restore KernCon
      k=0                           ; Bigfont Kerningtable lesen
rknc:
      Read knc : if knc > 250 then goto kncend ; 255 is terminator
      kerntable(k)=knc
      k = k + 1
      goto rknc
kncend:

      Restore Fresh
      for k = 0 to 50
      Read knc 
      Ybounc(k) = knc
      Next 

      Restore FontCon:k=0           ; Fonttab initialisieren
Weitar:                             ;
      k=k+1:Read ftn                ;
      If ftn = -1 Then Goto Weita
      fonttable(k)=ftn
      Goto Weitar

Weita:                              ; Flashtab initialisieren
      Restore Flashtab
      For k=1 To 19
      Read flsh
      flash(k)=flsh
      Next

      Restore Xmovetab              ; x-movement fuer "New Score" initialisieren
      k=0
Weitax:
      Read a
      if a <> 255 Then Xmove(k)=a : k = k + 1 : Goto Weitax ;read until terminator
      k = k + 1 
      Xmove(k) = 255 ; write terminator also

;-----------------------------------------------------------------

      For k=1 To 15                 ;Required for Fadein : Fading-tabelle anlegen
      PalRGB 0,k,k,0,15-k           ;taken from blitz manual
      Next

;-----------------------------------------------------------------
      NPrint " Just one more thing..." 
      BitMap 0,320,256,4                                ;Screen erzeugen &
      BitMap 1,320,256,4
      LoadBitMap 0,loaddir$+"gfx/gamescreen1.5",0   ;laden
      LoadPalette 0,loaddir$+"gfx/gamescreen1.5"    ;Palette fuer Hempmode-Reset sichern
;-----------------------------------------------------------------

      Vwait 100
      NPrint " Loading completed!"
      VWait 10
      NPrint " Starting BlitzWays..."
      VWait 100

      BLITZ

;-----------------------------------------------------------------

      Slice 0,40,320,256,$fff8,4,8,32,320,320  ;Screendimensionen 
      Use BitMap 0

      For k=0 To 15
      RGB k,0,0,0
      Next

      Show 0
      BitMapOutput 0

      BlitzKeys On
      BlitzRepeat 256,256
      BitMapInput

      Buffer 0,700
      Buffer 1,700
      Buffer 2,700
      Buffer 3,700
      Buffer 4,16400

      Buffer 5,8192


      Zeit=0               ; Noetig fuer Anzeigeninit
      s.l=0                ; Score Longword auf 0
      Strayed=0            ; Noetig fuer Anzeigeninit
      Fokus=0              ; Noetig fuer Anzeigeninit
      HamfMamf = 0         ; Hempmode aus
      Hanfdelay = 0        ; Hempmode cycle tick delay counter
      StarsInitialized = 0 ; Sterne wurden noch nie geschrieben
      stnoffs=3            ; Offset for displaying the right tile number when reading from level map

      cheetcount = 0       ; timecheat 40x "*" is off
      SyCht = 0            ; Cheat aus

      Zspeedglobal = 50    ; Zeitgeschwindigkeit nun fixed

;-----------------------------------------------------------------

      StrayOld = 1
      o.l = 2000            ; 1 damit 0 jemals angezeigt wird

      Gosub ShowTime       ;Initialisierung der Anzeigen
      Gosub ShowScore
      Gosub ShowStrayed
      Gosub ShowLevel

      logobuf = 0

      Gosub Aufbau0
      FirstStartup = 1

;-----------------------------------------------------------------

      Gosub SterneAn
      Gosub SterneAus

      FadeIn 0,3         ;Wilkommen bei BlitzWays

      Mouse On
      MouseArea 8,8,232,232 ;//@audit-ok Mouse Area!

      For e = 0 To 24
      Gosub Dorandom
      Next 

      IsHiscore = 0

      Lastpause = 100
      LastESC = 60 
      LevelsPage = 1

;=================================================================
;*****************************************************************
; INTRO
;*****************************************************************

.PressFire: ;//@audit-ok PressFire

      denmax = 0                                                ; Werte fuer Introscreenwechsel-Schleife
      intromode = 4                                             ; Letzter Screen, weil Ueberlaufroutine
      Fokus = 0 : Strayed = 0 : Gosub ShowStrayed               ; upon return from playing reset strayed
      StrayOld = 1
      o.l = 1000            ; 1 damit 0 jemals angezeigt wird
      Gosub Clearbordermsg
      ;--------------------------------------------------------------------------------------v
      If FirstStartup = 2 Then FirstStartup = 0 : Goto M_IGNORE 
      If sfxON = 0 AND FirstStartup = 1 Then FirstStartup = 0 : intromode = 0 : denmax = 300 : Goto M_IGNORE    
      If sfxON = 1 AND FirstStartup = 1 Then FirstStartup = 0 : intromode = 0 : denmax = 300 
      ; do not trigger tune again if it already was triggered by first start
      ; AND do not repaint screen, because it was just faded in
      ; SO set screen countdown to denmax value, not 0
      ;--------------------------------------------------------------------------------------^

      StopTracker
      CurSONG = introtheme
      success = StartTracker (CurSONG) 
      if sfxON = 1 Then StopTracker                     ;if fx, immedately pause mod
                                                        ;only works if the last paused module
                                                        ;has been unpaused and stopped!

M_IGNORE:
      If sfxON = 1 Then Sound sfxlogo,2 : VWait 4 : Sound sfxlogo,8   ;if sfx mode play ways startup sound
      VWait 5

      If IsHiscore = 1 Then intromode = 0 : IsHiscore = 0 ; Falls zuletzt ein Hiscore erzielt wurde, nun Scores anzeigen
      funn=2                                              ; Nummer des Aufbaumoduls von funbuild (aufbaumuster level)


      OldMouseY = MouseY
      OldMouseX = MouseX
      brems = 0

       Gosub OnlyMkSprColor
      ;----------------------------------

FireWait:
      VWait
      JB=Joyb(0)

      Zeit=denmax
      Gosub ShowTime
      Gosub IntroRQ

      a$=Inkey$(1)
      If Asc(a$)=27 AND LastESC = 0 Then LastESC = 50 : Goto Exxit       ;Raus mit ESC
      LastESC = LastESC - 1 : If LastESC < 0 Then LastESC = 0
      if a$="" then goto SkipKey3

      If UCase$(a$)="M" Then Gosub MusicONOFF
      If UCase$(a$)="X" Then Gosub EndRush
      If UCase$(a$)="L" AND debug = 1 Then denmax = 5 ; Introscreenskip
      If UCase$(a$)="U" AND debug = 1 Then LevLock = LevLock + 1 : RGB 0,15,15,0 : VWait2 : RGB 0,0,0,0 
      If LevLock >= maxlevs then LevLock = maxlevs-1 

SkipKey3:

      brems = brems +1 : if brems > 1 Then brems = 0 : Gosub Slowedthings

      If JB <> 1 Then Goto FireWait

      fromtut = 0

StartGame:
      ;-- GAME HAS STARTED --------------

      Gosub SterneAus

      If logobuf = 1 Then UnBuffer 4 : logobuf = 0

      If intromode = 0 AND BtextBlinkState = 1 Then Unbuffer 5
      If intromode = 1 AND BtextBlinkState = 1 Then Unbuffer 5
      If intromode = 3 AND BtextBlinkState = 1 Then Unbuffer 5

      FlushBuffer 5

      Gosub FClean

      s.l = 0
      Gosub ShowScore
      Level = 0
      Gosub ShowLevel

      Goto PreGame


;----------------------------------------------------------------------------------------

Slowedthings:

      subslo = subslo + 1 
      if subslo > 1 Then subslo = 0 : If s.l > 0 Then s.l = s.l - 51 : Gosub ShowScore
      if s.l < 0 then s.l = 0 : Gosub ShowScore
      
      Gosub SterneVoran

      If HamfMamf=1 Then Gosub GrowthCon

      If intromode = 0 then Gosub AufbauBlink
      If intromode = 1 then Gosub AufbauBlink
      If intromode = 3 then Gosub AufbauBlink

      Return 

;=================================================================

IntroRQ: ;//@audit-ok IntroRQ
      If JB=2 Then Return

      denmax = denmax-1 : If denmax > -1 Then Return ;Warteschleife

      intromode = intromode+1
 
      If intromode > 4 Then intromode = 0

      If intromode = 0 AND BtextBlinkState = 1 Then Unbuffer 5
      If intromode = 1 AND BtextBlinkState = 1 Then Unbuffer 5
      If intromode = 3 AND BtextBlinkState = 1 Then Unbuffer 5
      If intromode = 4 AND BtextBlinkState = 1 Then Unbuffer 5

      If intromode = 0 Then Goto Aufbau1
      If intromode = 1 Then Goto Aufbau2
      If intromode = 2 Then Goto Aufbau3 ; no bigtext, no blink
      If intromode = 3 Then Goto Aufbau4
      If intromode = 4 Then Goto SelfPlay

      intromode = 0
      Return

;-----------------------------------------------------------------

Aufbau0:               ;Logo, dedicated.. wird nur beim ersten Start benutzt.
                       ;mit blink
      VWait
      If logobuf = 1 Then UnBuffer 4 : logobuf = 0
      Gosub FClean
      VWait
      BBlit 4,9,9,20
      logobuf = 1

      Gosub Text1
      Gosub TypeMang
      Gosub B_Text1
      Gosub BB_TypeMang
      BtextBlinkState = 1
      BtextBlink = 0

      denmax = 380
      Return

;-----------------------------------------------------------------

Aufbau1:               ;0 Logo, dedicated..
                       ;mit blink
      Gosub SterneAus
      VWait
      If logobuf = 1 Then UnBuffer 4 : logobuf = 0
      Gosub FClean
      VWait
      BBlit 4,9,9,20
      logobuf = 1

      Gosub Text1
      Gosub TypeMang
      Gosub B_Text1
      Gosub BB_TypeMang
      BtextBlinkState = 1
      BtextBlink = 0
      
      Gosub SterneAn

      denmax = 400
      Return

;-----------------------------------------------------------------

Aufbau2:               ;1 Scores ohne logo
                       ;mit blink
      Gosub SterneAus
      VWait
      If logobuf = 1 Then UnBuffer 4 : logobuf = 0
      Gosub FClean
      Gosub FunBuild
      VWait
      Gosub B_Text2
      Gosub B_TypeMang
      VWait
      Gosub ScoresToText
      Gosub TypeMang

      Gosub B_Text1
      Gosub BB_TypeMang
      BtextBlinkState = 1
      BtextBlink = 0  
            
      Gosub SterneAn

      denmax = 520
      Return

;-----------------------------------------------------------------

Aufbau3:  ;2 Greetings ;//@audit-ok Aufbau3
          ;ohne blink
      Gosub SterneAus
      VWait
      If logobuf = 1 Then UnBuffer 4 : logobuf = 0
      Gosub FClean
      VWait
      BBlit 4,9,9,104
      logobuf = 1

      Gosub Text5
      Gosub TypeMang
      Gosub SterneAn

      denmax = 320
      Return


;-----------------------------------------------------------------

Aufbau4:               ;3 Options one logo
                       ;mit blink
      Gosub SterneAus
      VWait
      If logobuf = 1 Then UnBuffer 4 : logobuf = 0
      Gosub FClean
      Gosub FunBuild
      Gosub Text6
      Gosub TypeMang
      
      Gosub B_Text1
      Gosub BB_TypeMang
      BtextBlinkState = 1
      BtextBlink = 0
      
      Gosub SterneAn

      denmax = 350
      Return

;------------------------------------------------------------------

AufbauBlink:
      BtextBlink = BtextBlink + 1
      If BtextBlink < 18 Then Return
 
      BtextBlink = 0

      BtextBlinkState = BtextBlinkState + 1 
      If BtextBlinkState >= 2 Then BtextBlinkState = 0

      If BtextBlinkState = 0 Then Unbuffer 5
      If BtextBlinkState = 1 Then Gosub B_Text1 : Gosub BB_TypeMang

      Return

;------------------------------------------------------------------

ClickBlink:
      BtextBlink = BtextBlink + 1
      If BtextBlink < 32 Then Return
 
      BtextBlink = 0

      BtextBlinkState = BtextBlinkState + 1 
      If BtextBlinkState >= 2 Then BtextBlinkState = 0

      If BtextBlinkState = 0 Then Unbuffer 5
      If BtextBlinkState = 1 Then Gosub B_Text15 : Gosub BB_TypeMang

      Return

;=================================================================
;*****************************************************************
;=================================================================

PreGame: ;//@audit-ok PreGame

      LastESC = 50
      Lastpause = 100
      cursorcanmove = 1
      Bordermsg = 0
      Tutorial = 0

      ;--------------------------------------
      If fromtut = 1 Then Goto keepmusic
      StopTracker 
      CurSONG = lvlselectsong  
      success = StartTracker (CurSONG) : vwait ;trigger new tune
      If sfxON = 1 Then StopTracker
keepmusic:
      ;--------------------------------------

      Gosub SterneOffscreen 
      Gosub SterneAus
      Zspeed = 50 : Zeit=256 : Gosub ShowTime
      Strayed = 0 : Gosub ShowStrayed

      Gosub B_Text6     ; Pick Level Text
      Gosub FClean
      Gosub B_TypeMang

      Gosub Clearbordermsg
      Gosub Text18 
      Gosub TypeMang 
;--------------------------------------------------------------------------------------------------

      lvprevxorig = 34
      lvprevyorig = 50
      lvlprevx = lvprevxorig
      lvlprevy = lvprevyorig
      lvlxmax = 6+1 ; number of preview thumbnails +1
      lvlpboxx = 23
      lvlxgap = 5
      lvlpxadv = lvlpboxx + lvlxgap
      lvlpboxy = 23
      lvlpyadv = lvlpboxy+12

      numtutlvls = 5 - 1
      pagebreak = 29 
      if LevelsPage = 2 Then Level = pagebreak : Gosub QuickLevget : lvlprevcount = pagebreak+numtutlvls-1
      if LevelsPage = 1 Then Level = 250 : Gosub LevGet : lvlprevcount = 0  
      txxadj = 1
      txyadj = 24

prvlvlsloop:
      if lvlprevcount > pagebreak+numtutlvls-1 AND LevelsPage = 1 then goto dispP1button
      if LevelsPage = 2 AND lvlprevcount = pagebreak+numtutlvls-1 then goto dispP2button

      xstep = 0
      ystep = 0

      for mini = 1 to 64
      Read miniscan
      if miniscan = 0 and LevelsPage = 1 AND lvlprevcount < numtutlvls + 1 then prvcol = 8 : goto fixdcol
      if miniscan = 0 then prvcol = 14 : goto fixdcol
      prvcol = ( miniscan - 6 ) / 6 
      if prvcol > 13 then prvcol = 13
      if prvcol < 1 then prvcol = 7
fixdcol:
      box lvlprevx+xstep,lvlprevy+ystep,lvlprevx+xstep+1,lvlprevy+ystep+1,prvcol  
      xstep = xstep + 3 : if xstep > 7*3 then xstep = 0 : ystep = ystep + 3
      next 

      if LevelsPage = 1 AND lvlprevcount > numtutlvls then goto nontutbox
      if LevelsPage = 2 then goto nontutbox
      box lvlprevx-1,lvlprevy-1,lvlprevx+lvlpboxx,lvlprevy+lvlpboxy,7
      goto bevelline

nontutbox:
      box lvlprevx-1,lvlprevy-1,lvlprevx+lvlpboxx,lvlprevy+lvlpboxy,15

bevelline:
      line lvlprevx-1,lvlprevy-1,lvlprevx+lvlpboxx,lvlprevy-1,1
      line lvlprevx-1,lvlprevy-1,lvlprevx-1,lvlprevy+lvlpboxy,1

      Read miniscan
      Read miniscan
      Read miniscan 

      if LevelsPage = 1 AND lvlprevcount < numtutlvls + 1 then gosub plottut
      if LevelsPage = 1 AND lvlprevcount > numtutlvls then gosub plotlvl
      if LevelsPage = 2 then gosub plotlvl
prevreenter:
      lvlprevx = lvlprevx + lvlpxadv
      if lvlprevx > lvlpxadv*(lvlxmax+1) then lvlprevx = lvprevxorig : lvlprevy = lvlprevy + lvlpyadv

      lvlprevcount = lvlprevcount + 1
      if lvlprevcount <= LevLock + numtutlvls then goto prvlvlsloop

PrevieprintEnd:
      lvlprevy = lvprevyorig
      Goto PrevDone


dispP1button:
      BlitMode CookieMode
      Blit 114,lvlprevx,lvlprevy+4 ; MORE icon
      Goto PrevieprintEnd

dispP2button:
      BlitMode CookieMode
      Blit 115,lvlprevx,lvlprevy+4 ; LESS icon
      Goto prevreenter 

;-----------------------------------------------------------------

LVSelBox:
        xx = int (x + 7)
        yy = int (y + 7)

        nothit = 0

        if xx < lvprevxorig then nothit = 1 : return
        if yy < lvprevyorig then nothit = 1 : return
        if xx > lvprevxorig + lvlpxadv + (7 * 3 * lvlxmax+1 )+14 then nothit = 1 : return
        if yy > lvprevyorig + lvlpyadv + (7 * 3 * 6 ) +12 then nothit = 1 : return

        xf = lvlpxadv
        yf = lvlpyadv
  
        adjboxx = int (( xx - lvprevxorig )/xf)
        adjboxy = int (( yy - lvprevyorig )/yf)

        ; locate 0,0 : print "   "
        ; locate 0,0 : print adjboxx
        ; locate 5,0 : print "   "
        ; locate 5,0 : print adjboxy

        ; box lvprevxorig-1+adjboxx*xf,lvprevyorig-1+adjboxy*yf, lvprevxorig+23+adjboxx*xf,lvprevyorig+lvlpyadv-2+adjboxy*yf,1
        ; vwait
        ; box lvprevxorig-1+adjboxx*xf,lvprevyorig-1+adjboxy*yf, lvprevxorig+23+adjboxx*xf,lvprevyorig+lvlpyadv-2+adjboxy*yf,0
        ; vwait 

            reslut = adjboxx + 1 + (lvlxmax * adjboxy)
        ; locate 10,0 : print "      "
        ; locate 10,0 : print "lv: "+Str$(reslut) 

        return 

;-----------------------------------------------------------------

SpecialClean:
        Gosub FClean
        boxf lvprevxorig-1,lvprevyorig-1,246,223,0
        return

;-----------------------------------------------------------------

plottut: 
        Text$="TU"+Str$(lvlprevcount+1)+Chr$(0)
        tx = lvlprevx + txxadj : ty = lvlprevy + txyadj 
        Goto FTypeMang ; GOTO IS OKAY

;-----------------------------------------------------------------

plotlvl: 
        Text$="L"
        if lvlprevcount-5 < 9 then Text$=Text$+"0"
        Text$=Text$+Str$(lvlprevcount-4)+Chr$(0)
        tx = lvlprevx + txxadj : ty = lvlprevy + txyadj 
        Goto FTypeMang ; GOTO IS OKAY

;=================================================================

PrevDone:
      If sfxON=1 Then Sound sfxstray,10 

      For e = 0 to 10
       VWait
        If HamfMamf = 1 Then Gosub GrowthCon
       VWait
      Next


      RGB 17, 14,14,14     ;Farben Mousepointer
      RGB 18,  8, 9,10
      RGB 19,  3, 5, 7

      InFront 2            ;Mousepointer vor die Grafik

      ged = 1

LevSelLoop:
           Vwait
           JB=Joyb(0)

           If JB = 1 AND ged = 1 Then Goto SkipLVSelChk     ;Click-hold
           If JB = 1 AND ged = 0 Then ged = 1 : Goto Ex_Pregame       ;-disable
           If JB = 0 Then ged = 0                           ;

           a$=Inkey$(1)
           If UCase$(a$)="M" Then Gosub MusicONOFF
           If debug = 1 AND UCase$(a$)="T" Then Zeit = 3 
           If Asc(a$)=27 AND LastESC = 0 Then LastESC = 50 : Gosub SterneOffscreen : Gosub SpecialClean : Goto PressFire
           LastESC = LastESC - 1 : If LastESC < 0 Then LastESC = 0

SkipLVSelChk:
           x=MouseX: y=MouseY

           gosub LVSelBox
           Gosub AnimCursor
           ueu = ueu +1 : if ueu <2 Then Goto SkipLVSel2
           ueu = 0
           If sfxON = 1 Then Gosub BlipFx
           If HamfMamf = 1 Then Gosub GrowthCon
SkipLVSel2:
           Gosub ZeitSchritt
           If Trigtime = 1 Then Gosub ShowTime
           If Timeup = 1 Then Gosub SterneOffscreen : Gosub SpecialClean : Goto PressFire

        Goto LevSelLoop

        ;-----------------------------------------------------------------

Ex_Pregame:

        if nothit = 1 then Goto SkipLVSelChk

        if reslut > numtutlvls+1 + LevLock then Goto LevSelLoop ;one page only - catch
        if LevelsPage = 1 AND reslut > pagebreak+numtutlvls+1 then Goto LevSelLoop ;clicked beyond more arrow
        if LevelsPage = 2 AND reslut > LevLock-pagebreak+2 then Goto LevSelLoop ;clicked beyond on page2

        if LevelsPage = 1 AND reslut = pagebreak+numtutlvls+1 Then LevelsPage = 2 : Gosub SpecialClean : Goto keepmusic
        if LevelsPage = 2 AND reslut = 1 Then LevelsPage = 1 : Gosub SpecialClean : Goto keepmusic

        Tutorial = 0
        if LevelsPage = 1 and reslut <= numtutlvls+1 then Level = 250+reslut-1 : Tutorial = 1 : fromtut = 1
        if LevelsPage = 1 and reslut > numtutlvls+1 then Level = reslut - numtutlvls-1 
        if LevelsPage = 2 then Level = reslut + pagebreak+1 - numtutlvls+1

        blit 113,(lvprevxorig-1+adjboxx*xf),(lvprevyorig-1+adjboxy*yf) ;show green OK tick
        If sfxON=1 Then Sound sfxpicked2,8 

        For e = 0 to 80
          VWait
          If HamfMamf = 1 Then Gosub GrowthCon
          x = mousex : y = mousey  
          Gosub AnimCursor  
        Next


        Gosub FClean
        boxf lvprevxorig-1,lvprevyorig-1,246,223,0

        Gosub Clearbordermsg

        Goto Spielen 

;=================================================================

Spielen: ;//@audit-ok Spielen

      Gosub SterneOffscreen
      Gosub SterneAus 

      LastESC = 50
      Lastpause = 50
      cursorcanmove = 1
      Bordermsg = 0


;-----------------------------------------------------------------
      if Tutorial = 1 then goto skiptrckr
      StopTracker                       ;stop any tune
      CurSONG = ingamesong  
      success = StartTracker (CurSONG)  ;trigger new tune
      if sfxON = 1 Then StopTracker     ;and pause it
skiptrckr:
;-----------------------------------------------------------------

      s.l = 0              ;Score
      Zeit = 0             ;Zeit

            ;Letztere Werte sind eigentlich ueberfluessig,
            ;wurden zur Sicherheit aber doch uebernommen!

      Zcon = 0             ;Counter bis naechste Sekunde
      Strayed = 0          ;Wie oft verklickt?
      Fokus = 0    ;Arbeitswert Strayed

;-----------------------------------------------------------------

PlayOn: 

      Gosub ShowLevel       ; Anzeigen-Init.
      Gosub ShowScore       ; Nullen
      Gosub ShowTime        ; Nullen
      Gosub Clearbordermsg

      Strayed = 0 : Fokus = 0 : Glost = 0
      Gosub ShowStrayed 

;-----------------------------------------------------------------


           ;beim ersten start des spielens levelnummer ankuendigen
           NochMehr = 1     ; Kleiner Mogler f. richtige Anzeige
           Gosub DispLev    ; Levelnummer ankündigen

;-----------------------------------------------------------------

.IgnoreX:
      Gosub LevelUp        ;-> Levelverwalter

           ;MatMake (also Steinmappe,
           ;die gelesen und veraendert wird)
           ;wurde in diese Routine (s. dort)
           ;verlegt, wegen Levelformat-
           ;veraenderung!

      Gosub Announcer      ;GoGoGo!

      ismarked = 0         ;Nix markiert
      noleft = 0           ;Steine vorhanden (1=leer)
      no = 15              ;Mauspointeranim init
      Timeup = 0           ;Zeit ist nicht abgelaufen
      Zspeed = Zspeedglobal;Normwert Zeitgeschwindigkeit
      Zcon = 0

      RGB 17, 14,14,14     ;Farben Mousepointer
      RGB 18,  8, 9,10
      RGB 19,  3, 5, 7

      InFront 2            ;Mousepointer vor die Grafik

      Gosub ShowTime       ;Nun richtige zeit anzeigen

      if Tutorial = 1 Then Gosub TutBorderMsg

;*****************************************************************
;*****************************************************************

;Haupt-GAME-"irq"

;*****************************************************************
;*****************************************************************


.MLoop: ;//@audit-ok MLoop
           VWait
           If Timeup = 1 Then Goto Loser 

           JB=Joyb(0)

           If JB = 1 AND ged = 1 Then Goto LeafOut     ;Click-hold
           If JB = 1 Then ged = 1 : Gosub TryToFetch   ;-disable
           If JB = 0 Then ged = 0                      ;

LeafOut:
           x=MouseX: y=MouseY

           Gosub AnimCursor

Mouseloop: If noleft = 1 AND Tutorial = 0 Then fromtut = 0 : Goto Finito
           If noleft = 1 AND Tutorial = 1 Then Goto Finito 

           a$=Inkey$(1)
           if a$="" Then goto SkipKey2
           If UCase$(a$)="P" AND Lastpause = 0 Then Gosub Paused
           If UCase$(a$)="M" Then Gosub MusicONOFF
           If UCase$(a$)="X" Then Gosub EndRush
           If UCase$(a$)="L" AND debug = 1 AND Tutorial = 0 Then Zeit = 2 : noleft = 1 ; levelskip
           If UCase$(a$)="T" AND debug = 1 Then Zeit = 3 : a$ = "" ; Kill Time
           If a$="0" AND debug = 1 AND Tutorial = 0 Then s.l = s.l + 2000 : Gosub ShowScore : a$="" ;s.l = score . longword

           If Asc(a$)=27 AND LastESC = 0 Then LastESC = 50 : Goto Loser

SkipKey2:
           Lastpause = Lastpause - 1 : If Lastpause < 0 Then Lastpause = 0
           LastESC = LastESC - 1 : If LastESC < 0 Then LastESC = 0

           Gosub ZeitSchritt
           If Trigtime = 1 Then Gosub ShowTime

           If Bordermsg = 1 Then Gosub Clearbordermsg
           If Bordermsg > 0 Then Bordermsg = Bordermsg - 1
           
           Hanfdelay = Hanfdelay + 1 : If Hanfdelay < 2 Then Goto SkipHanfPlay 
           Hanfdelay = 0 : If HamfMamf=1 Then Gosub GrowthCon
SkipHanfPlay:

           Goto MLoop

;---------------------------------------------------------------------

ZeitSchritt:
           Zcon = Zcon +1 : Timeup = 0 : Trigtime = 0
           If Zcon > Zspeed Then Zcon = 0 : Zeit = Zeit -1 : Trigtime = 1 

           If Zeit <= 0 AND SyCht=1 Then Zeit=1
           If Zeit <= 0 AND HamfMamf=1 Then Zeit=1
           If Zeit <= 0 Then Zeit = 0 : Timeup = 1

           Return 

;---------------------------------------------------------------------

AnimCursor: ;//@audit-ok AnimCursor
           uva=uva+1 : If uva<=2 Then Goto DispCursor   ; Cursoranimdelay
           uva=0
           
           no = no + 1 : If no > 15 Then no = 0         ; Which Cursorframe

DispCursor:
           ShowSprite no,x,y,0
           Return 

;----------------------------------------------------------------------

TutBorderMsg: ;//@audit-ok Tutorial Bordermessage

          if Level=250 Then Gosub TextTut1
          if Level=251 Then Gosub TextTut2
          if Level=252 Then Gosub TextTut3
          if Level=253 Then Gosub TextTut4
          if Level=254 Then Gosub TextTut5

          Gosub TypeMang
          Bordermsg = 350
          Return


;=================================================================

; Check ob weitergespielt werden kann

Finito:
           Gosub ShowTime
           Gosub ShowScore
           Gosub ShowStrayed

           ;make sure Refocus Reward sound is not cut off -----
 
           For e = 1 To 25
           x = MouseX : y = MouseY
           VWait
           Gosub AnimCursor
           Hanfdelay = Hanfdelay + 1 : If Hanfdelay < 2 Then Goto SkiphanfN12
           Hanfdelay = 0 
           If HamfMamf=1 Then Gosub GrowthCon
SkiphanfN12:
           Next e

Sofortabbau:
           ;---------------------------------------------------

           Gosub Clearbordermsg
           Gosub SterneAus 
           Gosub SterneOffscreen

;-----------------------------------------------------------------

.PostLev:  If Tutorial = 1 Then Gosub Clean     ; Area Loeschen (wg. "dead"-Stones)
           If Tutorial = 0 Then Gosub FClean

           If Tutorial = 1 Then Gosub WellDoneTut : Goto StartGame

           Gosub BonusCalc

           Gosub LevCon     ; Levelnummer holen

           If NochMehr = 1 Then Goto PlayOn     ;Geht noch weiter

           If NochMehr = 0 Then Gosub DispLev : Gosub GewonnenEy   ;Durchgespielt!

           IsHiscore = 0       ; Erstmal loeschen ob es ein Hiscore ist

           Gosub GetValues     ;Scorefile in Variablen aufteilen
           Gosub ConvertScore  ;Aktuellen Score in Variable umwandeln

           If erreicht = 0 Then Gosub Clean : Goto PressFire ; neuer score? Nein? sofort raus.


.Wrapitup: Gosub EditScores    ; Hiscore eintragen

           Gosub SterneOffscreen
           Gosub SterneAus

           usfx = sfxON : sfxON = 1
           Volume 15,64,64,64,64

           Gosub Clean         ; Area Loeschen

           FlushBuffer 5

           sfxON = usfx 

           Goto PressFire      ; Zurueck ins Intro


;=================================================================

; Verloren oder Abbruch durch ESC

.Loser: ;//@audit-ok Loser
           Gosub SterneOffscreen
           Gosub SterneAus
           Gosub ShowTime
           Gosub Clearbordermsg
           FlushBuffer 5

           If Timeup = 0 Then Gosub B_Text7       ; Game Aborted / Ending Game
           If Timeup = 1 Then Gosub B_Text8       ; Time Up
           Gosub B_TypeMang         

           If sfxON = 1 Then Sound sfxgamelost,1 : VWait : Sound sfxgamelost,4 

           for e = 0 to 40
           VWait
           Hanfdelay = Hanfdelay + 1 : If Hanfdelay < 2 Then Goto SkiphanfN9
           Hanfdelay = 0 
           If HamfMamf=1 Then Gosub GrowthCon
SkiphanfN9:
           Next 

           FlushBuffer 0
           FlushBuffer 1

           RGB 17,0 ,0 ,0      ;
           RGB 18,0 ,0 ,0      ;
           RGB 19,0 ,0 ,0      ;
           InFront 0           ; Sterne Aus

           Gosub Clean         ;

           If Tutorial = 1 Then erreicht = 0 : s.l = 0 : Goto PreGame
           fromtut = 0
           Glost = 1 : Gosub Zbonusdone    ; Penalty auch bei Time Up oder Quit! 
SkipBonusCheck:
           IsHiscore = 0       ;Wissen wir noch nicht

           Gosub GetValues     ;Scorefile in Variablen aufteilen
           Gosub ConvertScore  ;Aktuellen Score in Variable umwandeln

           StopTracker : VWait ; Stop any song  

           If erreicht = 0 Then Goto PreGame ; PressFire ; neuer score? Nein? sofort raus.

           VWait 10
           Sound sfxwon,1 : VWait : Sound sfxwon,4 ;Play won Sound always, stereodelay effect

           Gosub Text8         ; So tun als ob man nicht wuesste dass es ein neuer Hiscore ist.
           Gosub TypeMang      ;

LoserScreenloop:
           Vwait
           JB = Joyb(0)
           a$ = Inkey$(1)

           If HamfMamf=1 Then Gosub GrowthCon
           Gosub ClickBlink

           If JB <> 1 Then Goto LoserScreenloop

           JB = 0
           a$ = ""

           FlushBuffer 5

           Goto Wrapitup


;=================================================================
;=================================================================
;=================================================================

;    Abbauroutinen fuer Spielende !! 

;=================================================================

.Exxit: ;//@audit-ok Exxit 
           Gosub SterneOffscreen : Gosub SterneAus          

           If logobuf = 1 Then UnBuffer 4 : logobuf = 0
           if intromode = 0 AND BtextBlinkState = 1 Then Unbuffer 5
           if intromode = 1 AND BtextBlinkState = 1 Then Unbuffer 5
           if intromode = 3 AND BtextBlinkState = 1 Then Unbuffer 5

           If sfxON = 1 Then Sound sfxselect,4 : VWait : Sound sfxselect,1

           Gosub Clearbordermsg
           Gosub FClean
           Gosub Text10
           Gosub TypeMang          

           Gosub SterneAn 

           For e = 0 to 20
           VWait 2
           Gosub SterneVoran
           If HamfMamf=1 Then Gosub GrowthCon
           next         

LastCall:                               ; catch for multiple ESC, "Sure you wanna quit"
           VWait 
           a$=Inkey$(1)

           If UCase$(a$) = "Y" Then Goto DoExit
           If UCase$(a$) = "Z" Then Goto DoExit
           If UCase$(a$) = "N" Then Gosub SterneOffscreen : Gosub FClean : FirstStartup = 2 : Goto PressFire
           If UCase$(a$) = "M" Then Gosub SterneOffscreen : Gosub FClean : FirstStartup = 2 : Goto PressFire

           Starslower = Starslower + 1 : If Starslower < 2 Then Goto SkipExitStars 
           Starslower = 0 
           Gosub SterneVoran          
SkipExitStars:

           Hanfdelay = Hanfdelay + 1 : If Hanfdelay < 2 Then Goto SkiphanfN8
           Hanfdelay = 0 
           If HamfMamf=1 Then Gosub GrowthCon
SkiphanfN8:

           Goto LastCall

;-----------------------------------------------------------------

.DoExit:
           Gosub SterneOffscreen : Gosub SterneAus    ; since we now got stars in "last call"
                                     ; stars must be disabled here
           InFront 0

           If HamfMamf = 1 Then Gosub EndRush

           If sfxON = 1 Then Sound sfxpause,1 : VWait : Sound sfxpause,4
           VWait 20

           For e=0 to 5 : FlushBuffer e : next ;Alle Buffer verwerfen

           Gosub FClean

           FadeOut 0,1
   
           StopTracker : vwait           

           FreeTrackerModule (ingamesong)
           FreeTrackerModule (hiscoresong)
           FreeTrackerModule (introtheme)
           FreeTrackerModule (lvlselectsong)

           AMIGA                        ; must be here 
           Free BitMap 0
           Free BitMap 1
           FreeSlices
           WBenchToFront_               ; actually an OS call!
           WbToScreen 0                 ; pick up workbench screen!
           Use Window 1
           NPrint ""
           Print " PLEASE WAIT! Saving Scores..."
           Gosub SaveScores
           VWait 200
           NPrint " Done!"
           Nprint "  << Click here >>"

           MouseWait

           Free Window 1

           End                          ; Back to the surface (goodbye!)
           ;---------------

           Blitz                        ; must be here to trick compiler 
                                        ; because of previous AMIGA

;=================================================================
;=================================================================
;=================================================================

; Auslagerungen


; Levelnummer Anzeigen

.DispLev:  If NochMehr = 1 Then Gosub B_Text4
           If NochMehr = 0 Then Gosub B_Text5

           Gosub FClean
           Gosub B_TypeMang
           If sfxON=1 Then Sound sfxlvlover,10   ;Level Complete Sound
           
           For e = 0 to 60
           Vwait
           If HamfMamf = 1 Then Gosub GrowthCon
           Vwait
           Next 

           Gosub FClean
           Return

;------------------------------------------------------------------

.Announcer: ;//@audit-ok Announcer

        For anloop = 0 to 6
 
        Gosub B_Text10
        Gosub BB_TypeMang
        Vwait 6
        If HamfMamf = 1 Then Gosub GrowthCon
        Unbuffer 5
        Vwait 6
        If HamfMamf = 1 Then Gosub GrowthCon
        Next 

        Vwait 3

        Return

;------------------------------------------------------------------

.Announcer2: 
        For anloop = 0 to 6
 
        Gosub B_Text14
        Gosub BB_TypeMang

        Vwait 6
        If HamfMamf = 1 Then Gosub GrowthCon
        Unbuffer 5
        Vwait 6
        If HamfMamf = 1 Then Gosub GrowthCon
        Next 
        Vwait 3

        Return

;------------------------------------------------------------------

.BonusCalc: ;//@todo BonusCalc
        If SyCht = 1 Then Return

        Gosub SterneOffscreen

        scorold.l = s.l 

        for e = 0 to 50
        vwait 
        Hanfdelay = Hanfdelay + 1 : If Hanfdelay < 2 Then Goto SkiphanfN11
        Hanfdelay = 0 
        If HamfMamf=1 Then Gosub GrowthCon
SkiphanfN11:
        next

        Gosub B_Text11 
        Gosub B_TypeMang
        Gosub Text11
        Gosub TypeMang

        ;Zeit Countdown

        Zbonus = 0
        ZBval = 50
        Gosub DispZbonus

ZbonusLoop:
        If Zeit = 0 Then Goto Zbonusdone

        s.l = s.l + ZBval 
        ;Score Overflow wird in Showscore abgefangen 
        If sfxON=1 Then Sound sfxstoneup,10

        Zbonus = Zbonus +1
        Zeit = Zeit - 1 

        VWait
        Gosub ShowScore 
        VWait
        Gosub FShowTime
        VWait
        Gosub DispZbonus

        VWait
        If HamfMamf = 1 Then Gosub GrowthCon
        Vwait


        Goto ZbonusLoop

Zbonusdone:

        ;-------------------------------

        If Glost = 1 AND Strayed = 0 Then Glost = 0 : Return 

        if s.l < 1001 and Strayed > 0 Then s.l = 0 : Strayed = 0 : Return ; too little to show

        If Strayed = 0 Then Goto SPenaltyDone  ; kein penalty anzeigen wenn kein stray

        for e = 0 to 50
        If HamfMamf = 1 Then Gosub GrowthCon
        Vwait
        next 

        ;Strayed Countdown

        Gosub B_Text12 
        Gosub B_TypeMang
        Gosub Text12
        Gosub TypeMang

        If sfxON=1 Then Sound sfxparp ,10

        SPenalty = 0
        SPVal = 1000
        Gosub DispPenalty

        for e = 0 to 40
        vwait
        If HamfMamf = 1 Then Gosub GrowthCon
        next 

SPenaltyLoop:
        If Strayed = 0 Then Goto SPenaltyDone

        s.l = s.l - SPVal 
        If s.l < 0 Then s.l = 0 : Gosub ShowScore : Strayed = 0 : Gosub ShowStrayed : Goto SPenaltyDone
        If sfxON=1 Then Sound sfxwrngpos,10
 
        SPenalty = SPenalty +1
        Strayed = Strayed - 1
        VWait
        Gosub ShowScore 
        VWait
        Gosub ShowStrayed
        VWait
        Gosub DispPenalty

        for e = 0 to 42
        vwait
        If HamfMamf = 1 Then Gosub GrowthCon
        next 

        Goto SPenaltyLoop

SPenaltyDone:
        for e = 0 to 100 ; wait 2 secs
        Vwait
        If HamfMamf = 1 Then Gosub GrowthCon
        next e 

        ;---- end 

        Gosub Clean
        Return 

        ;-------------------------
        ;-------------------------

DispZbonus:
        Text$=Str$(Zbonus*ZBval)
        Text$=Text$+Chr$(0)
        tx=25*7
        ty=11*9
        adv=9

        Text$="0000"+Text$
        Text$=Right$(Text$,6)

        Goto FTypeMang  ; GOTO IS OK


DispPenalty:
        Text$=Str$(SPenalty*SPVal)
        Text$=Text$+Chr$(0)
        tx=25*7
        ty=18*9
        adv=9

        Text$="0000"+Text$
        Text$=Right$(Text$,6)

        Goto FTypeMang  ; GOTO IS OK

;=================================================================
;*****************************************************************
;*****************************************************************
;*****************************************************************
;=================================================================

; Generatoren (werden nicht staendig gebraucht)

;=================================================================


.LevelUp:
         Gosub LevGet
         Gosub MatMake
         Gosub Build
         Return


;=================================================================

Build:   ;Vorgeschaltet ein Wahlmodul fuer verschiedene
         ;Arten des Levelaufbaus 1 = normal Zeile f. Zeile
         ;2= Spiralfoermig aus der Mitte im UZS
         ;3= Spiralfoermig aus der Mitte gegen UZS


         mbxf=mbxf+1

         If mbxf>2 Then mbxf=0
         If mbxf=2 Then Goto Build3
         If mbxf=1 Then Goto Build2
         Goto Build1 ; If mbxf=0 Then ...


;-----------------------------------------------------------------


Build1:   ; Level aus Matrix erstellen

         BlitMode CookieMode
         sx=32 : sy=32        ;Feldaufbau Vorwaerts

         For e=1 To 8
         For ee=1 To 8
         stn = matrix(ee,e)

         If stn > 0 AND sfxON=1 Then Sound sfxstoneup,10

         VWait 2
         If HamfMamf=1 Then Gosub GrowthCon

         If stn > 0 Then Blit stn+stnoffs,sx,sy
         sx=sx+24
         Next ee

         sx=32
         sy=sy+24
         Next e

         Return

;-----------------------------------------------------------------

Build2:   ; Kreisfoermig Level aus Matrix erstellen

         BlitMode CookieMode

         Restore BMapxy

         For mpc=0 To 63
         Read mbx,mby
         ee=mbx : e=mby
         stn = matrix(ee,e)

         If stn > 0 AND sfxON=1 Then Sound sfxstoneup,10
         If stn > 0 Then VWait

         If stn > 0 Then Blit stn+stnoffs,(mbx*24)+8,(mby*24)+8

         VWait 
         If HamfMamf=1 Then Gosub GrowthCon

         Next mpc

         Return

;-----------------------------------------------------------------

Build3:   ; Kreisfoermig Level aus Matrix erstellen

         BlitMode CookieMode

         Restore BMapxy

         For mpc=0 To 63
         Read mby,mbx
         ee=mbx : e=mby
         stn = matrix(ee,e)

         If stn > 0 AND sfxON=1 Then Sound sfxstoneup,10
         If stn > 0 Then VWait

         If stn > 0 Then Blit stn+stnoffs,(mbx*24)+8,(mby*24)+8

         VWait 
         If HamfMamf=1 Then Gosub GrowthCon

         Next mpc

         Return

;=================================================================

ReBuild: BlitMode CookieMode
         sx=32 : sy=32        ;Feldwiederaufbau Vorwaerts

         For e=1 To 8
         For ee=1 To 8
         stn = matrix(ee,e)
         VWait
         If stn > 0 Then Blit stn+stnoffs,sx,sy
         If stn > 0 AND sfxON=1 Then Sound sfxstoneup,10
         If stn > 0 Then VWait

         If HamfMamf=1 Then Gosub GrowthCon

         sx=sx+24
         Next ee

         sx=32
         sy=sy+24
         Next e

         Return

;=================================================================

        ;//@audit-ok Clean
.Clean:  BlitMode EraseMode   ;Evtl. Restliche Steine loeschen
         sx=32 : sy=32
         u=0

         For e=1 To 8
         For ee=1 To 8
         VWait : If HamfMamf = 1 Then Gosub GrowthCon
         Blit 2,sx,sy
         sx=sx+24
         u=u+1 : If u = 2 Then u = 0 : If sfxON=1 AND u = 0 Then Sound sfxstoneup,10
         Next ee

         sx=32
         sy=sy+24
         Next e

         Return


;=================================================================

FClean:  BlitMode EraseMode   ;Evtl. Restliche Steine schnell loeschen
         sx=32 : sy=32

         For e=1 To 8
         For ee=1 To 8

         Blit 2,sx,sy
         sx=sx+24
         Next ee

         sx=32
         sy=sy+24
         Next e

         Return


;=================================================================


; Matrix (weil Basic) erstellen  +  Zeit holen!

.MatMake: ;//@audit-ok MatMake

        Gosub LevGet

        For my=1 To 8                 ;8 Zeilen
        For mx=1 To 8                 ;mit 8 Spalten
        Read mm : matrix(mx,my) = mm  ;Schreibe Wert in Matrix
        Next mx                       ;Naechste Spalte
        Next my                       ;Naechste Zeile

        Read Zeit : Read Zspeed : Read Checksm
        Zspeed = Zspeedglobal

        ZeitOrig = Zeit 

        If Checksm = -123 Then Return
     
        Goto DoExit

;=================================================================


; FunMatrix     ;Art des Matrixaufbaus waehlen

FunBuild:
        BlitMode CookieMode
        sx=32 : sy=32                 ;Aufbau Vorwaerts
        funn=funn+1:If funn>2 Then funn=1
        If funn=1 Then Restore FunMap1
        If funn=2 Then Restore FunMap2

        For my=1 To 8                 ;8 Zeilen
        For mx=1 To 8                 ;mit 8 Spalten

        Read mm
        If mm>0 Then Blit mm+stnoffs,sx,sy

        sx=sx+24
        Next mx                       ;Naechste Spalte

        sx=32
        sy=sy+24
        Next my                       ;Naechste Zeile

        Return

;=================================================================

; Feld fuer Weg-finden

FieldIs:
        field(1,1) = -1 : field(10,1) = -1   ;Spielfeldecken belegen
        field(1,10)= -1 : field(10,10)= -1

        my=1                          ;Mit dieser Routine
        For fy=2 To 9                 ;wird das Aktuelle
        mx=1                          ;Steinfeld in die Mitte
        For fx=2 To 9                 ;des Weg-Finden-Feldes
        ff=matrix(mx,my)              ;kopiert
        mx=mx+1
        field(fx,fy) = ff
        Next fx

        my=my+1
        Next fy

        Return

;=================================================================
;*****************************************************************
; Sprungmodule ===================================================


;Versuchen, ob Stein greifbar

.TryToFetch: ;//@audit-ok TryToFetch
        ttx=x+7:tty=y+7                                 ;Masspunkt in Pointermitte
                                                        ;fixed 6-jan-2020
        If ttx < 32 OR ttx > 248 Then Goto Fetchfail    ;Ausserhalb
        If tty < 32 OR tty > 248 Then Goto Fetchfail    ;des Spielfeldes?

        ;y-koordinaten In Rasterform berechnen
        tty = (Int((tty-32)/24))*24+32 

        ;x-koordinaten In Rasterform berechnen
        ttx = (Int((ttx-32)/24))*24+32


;----------------------


xycalc: ;//@audit-ok xycalc

;Gitter 1 oder 2 zu setzen ?

        If ismarked = 1 Then Goto xy2calc

;Gitter 1 Neu Setzen

        Gosub Fetchfail                         ;Wenn Gitter bereits Gesetzt, freigeben
        Gosub CheckIf                           ;Ist ein Stein Getroffen?

        If Korrekt = 0 Then Goto Fetchfail

        If sfxON=1 Then Sound sfxpicked1,4                 ;1. Selectclap

        Stein1x=ttx:Stein1y=tty                  ;Da Richtig, Stein1pos
                                                 ;in Matrix merken!
        BBlit 0,1,ttx,tty                        ;Gitter Setzen
        ismarked = 1                             ;Stein Markiert melden
        Return


;=================================================================

;Diese Routine wird angesprungen, wenn: - 1 Stein markiert ist (ismarked=1)
;                                       - Stein1x&Stein1y seine Position
;                                         markieren.

xy2calc: ;//@audit-ok xy2calc
        deselect = 0 
        dice = 0
        If Stein1x = ttx AND Stein1y = tty Then deselect = 1 : Goto Fetchfail

        Gosub CheckOld                   ;War der alte Stein moeglich?
        If Korrekt = 0 Then Goto Fetchfail
        Gosub CheckIf                    ;Ist der neue Stein moeglich?
        If Korrekt = 0 Then Goto Fetchfail
        Gosub CheckIf1equ2               ;Sind beide gleich???
        If Korrekt = 0 Then Goto Fetchfail

        Gosub Pathfinder                 ;Ist sogar ein Weg moeglich?

        If frei = 0 Then Goto Fetchfail     ;Schaade.

        If Bubble = 0 Then Goto Fetchfail   ;sfx error fix 1-okt-2019 (thx Mattias)

        If Reverse = 0 Then BBlit 1,1,ttx,tty
        If Reverse = 1 Then BBlit 1,1,Stein1x,Stein1y

        If sfxON=1 Then Sound sfxpicked2,8         ;2. Select Success Clap

        Gosub KillStonz
 
        if dice = 1 then gosub Shufflefun

        Fokus = Fokus+1
        If Fokus > 4 Then Fokus = 0 : If Strayed > 0 Then Gosub FokusReward
        Gosub ShowStrayed

        Gosub ChekMat

        Return

        ;--------------------------------------------------

FokusReward: ;//@todo FOKUSREWARD 
        Strayed = Strayed - 1 : If Strayed < 0 Then Strayed = 0 : Return 
        If sfxON=1 AND Strayed > -1 Then Sound sfxstray,10 
        Gosub Text15 : Gosub TypeMang : Bordermsg = 150

        Return

;=================================================================

;alle bereits gesetzten Gitter freigeben

Fetchfail: ;//@todo Fetchfail 
        Wasfail = 0
        If ismarked = 1 Then ismarked = 0 : UnBuffer 0 : Wasfail = 1 : if sfxON = 1 Then Sound sfxstoneup ,10
        If deselect = 1 Then Wasfail = 0 ;//@todo deselect Fix 
        If legit = 0 AND Wasfail = 1 Then Strayed=Strayed+1 : Fokus=0 ;legit: value is handled correctly
        If Strayed > 23 Then Strayed = 23         ;Current Max is 23 Misclicks
        If Wasfail = 1 AND sfxON = 1 AND legit = 0 Then Sound sfxwrngpos,10
        If Wasfail = 1 AND sfxON = 1 AND legit = 1 Then Sound sfxstoneup,10
        If Wasfail = 1 AND legit = 0 Then Gosub Text13 : Gosub TypeMang : Bordermsg = 150 ;//@todo Bordermsg
        If Wasfail = 1 AND legit = 0 AND Strayed > 5 Then Gosub Text14 : Gosub TypeMang
 
        Gosub ShowStrayed

        Return

;=================================================================

;alle bereits gesetzten Gitter freigeben SELFPLAY

FetchfailLite:
        If ismarked = 1 Then ismarked = 0 : UnBuffer 0 : Wasfail = 1 
        Return

;=================================================================

Clearbordermsg:

        boxf 73,247,180,256,0 ;lower
        boxf 67,0,186,18,0 ;upper
        Bordermsg = 0
        Return

;=================================================================

.CheckIf:          ;Feind oder Freund?

        mx = (ttx-32)/24 : my = (tty-32)/24
        legit = 0
        If matrix(mx+1,my+1) = 0 Then Korrekt = 0 : legit = 0 : Return
        If matrix(mx+1,my+1) = 07 Then Korrekt = 0 : legit = 0 : Return ;Betonstein

        Korrekt = 1

        Return

;=================================================================

CheckOld:         ;Was war der alte Stein nochmal?

        mx = (Stein1x-32)/24 : my = (Stein1y-32)/24
        If matrix(mx+1,my+1) = 0 Then Korrekt = 0 : Return
        If matrix(mx+1,my+1) = 07 Then Korrekt = 0 : Return ;Betonstein
        Korrekt = 1

        Return

;=================================================================

CheckIf1equ2:     ;Beide gefassten Steine gleich?

        mx = (Stein1x-32)/24 : my = (Stein1y-32)/24
        Greif = matrix(mx+1,my+1)
        If Greif = 0 Then Goto FatalError  ; Dieser Fehler
                                           ; kann nur durch Hacker auftreten!

        mx = (ttx-32)/24 : my = (tty-32)/24
        Greif2 = matrix(mx+1,my+1)
        If Greif AND Greif2 = 18 Then dice = 1 ; Wuerfel Reshuffle Matrix
        If Greif2 = Greif Then Korrekt=1 : Return
        ;//@todo JOKER
        If Greif2 = 8 Then Korrekt = 1 : Return
        If Greif = 8 Then Korrekt = 1 : Return 
        Korrekt=0
        Return

;--------------------------------------------------

Shufflefun: ;//@todo s h u f f l e f u n
        sffadd = INT (RND(50)) + 8
        sffadd = INT (RND(50)) + 8
        sffadd = INT (RND(50)) + 8

        For smy=1 To 8                 ;8 Zeilen
        For smx=1 To 8                 ;mit 8 Spalten

        sff = matrix (smx,smy)
        if sff = 0 Then Goto Skipsff
        if sff = 7 Then Goto Skipsff
        if sff = 8 Then Goto Skipsff

        sff = sff + sffadd
        limitz = 109
        if sff > limitz then sff = sff - limitz : sff = sff + 8
        if sff > limitz then sff = sff - limitz : sff = sff + 8
        if sff = 8 then sff = 9

        matrix (smx,smy) = sff

Skipsff:
        Next smx                       ;Naechste Spalte
        Next smy         

         ;------------------
 FReBuild: 
         sx=32 : sy=32        ;Feldwiederaufbau Schnell für Shufflefun

         For e=1 To 8
         For ee=1 To 8
         stn = matrix(ee,e)

         If stn > 7 Then Gosub FRebuildDO
         If stn > 7 AND sfxON=1 Then Sound sfxstoneup,10
         If stn > 7 Then VWait

         If HamfMamf=1 Then Gosub GrowthCon
         If cursorcanmove = 1 Then x = MouseX : y = MouseY
         If cursorcanmove = 0 Then x = mscx : y = mscy 
         Gosub AnimCursor       

         sx=sx+24
         Next ee

         sx=32
         sy=sy+24
         Next e

         Return
         ;------------------

FRebuildDO:
         BlitMode EraseMode
         Blit 2,sx,sy ;Cleaner.iff is back
         BlitMode CookieMode
         Blit stn+stnoffs,sx,sy
         Return   

;=================================================================

FatalError:

        StopTracker 
        AMIGA                           ; must be here 
        WBenchToFront_                  ; actually an OS call!
        WbToScreen 0                    ; pick up workbench screen!
        Use Window 1
        NPrint ""
        NPrint "ERROR: Level matrix inconsistent!"
        Nprint "Game cannot continue." 
        NPrint "Please inform coder: wertstahl@gmx.de"
        NPrint ""
        Nprint "*** Click to quit ***"

        MouseWait
        Goto DoExit
        Blitz                           ;Must be here to trick compiler
;=================================================================

KillStonz:  ;Steine sowohl grafisch als auch datenmaessig loeschen


        If Bubble = 0 Then UnBuffer 1 : UnBuffer 0 : Goto NoWay
        If Bubble = 1 Then Gosub SNAKE : Bubble = 0

        FlushBuffer 1
        FlushBuffer 0

        BlitMode EraseMode
        Blit 2,Stein1x,Stein1y ;Cleaner.iff is back
        Blit 2,ttx,tty

        mx = (ttx-32)/24 : my = (tty-32)/24
        matrix(mx+1,my+1) = 0
        mx = (Stein1x-32)/24 : my = (Stein1y-32)/24
        matrix(mx+1,my+1) = 0

NoWay:
        Korrekt = 0 : ismarked = 0 
        Stein1x=-1 : Stein1y=-1
        ttx=-1 : tty=-1

        Return

;=================================================================

; Matrix abchecken, wieviele Steine sind noch ueber??

.ChekMat:
        sc = 0

        For my=1 To 8                 ;8 Zeilen
        For mx=1 To 8                 ;mit 8 Spalten
        mm = matrix(mx,my)
        If mm = 7 Then Goto Ignor     ;Betonstein ignorieren
        If mm > 0 Then sc = sc+1
Ignor:
        Next mx                       ;Naechste Spalte
        Next my                       ;Naechste Zeile

        If sc < 2 Then noleft = 1 : Return

        noleft = 0
        Return



;=================================================================

SNAKE:

        dif1x = knoten1x - snf1x
        dif1y = knoten1y - snf1y
        dif2x = knoten2x - knoten1x
        dif2y = knoten2y - knoten1y
        dif3x = snfx - knoten2x
        dif3y = snfy - knoten2y

        sna = 1
        snakex(sna) = snf1x
        snakey(sna) = snf1y

        If dif1x <>0 Then snkind(sna)=7
        If dif1y <>0 Then snkind(sna)=8

;-----------------------------------------------------------------

phase:  If dif1x = 0 AND dif1y = 0 Then Goto phase2

        If dif1x = 0 Then Goto ymoof

        dir = -1 ;new
        If dif1x < 0 Then dir = 1

        amnt = 0

xloop:  dif1x = dif1x + dir
        amnt = amnt + 1
        sna = sna + 1
        snakex(sna) = snf1x-(dir*amnt)
        snakey(sna) = snf1y
        snkind(sna) = 7
        If dif1x <> 0 Then Goto xloop

        Goto phase2


ymoof:  dir = -1 ;new
        If dif1y < 0 Then dir = 1

        amnt = 0

yloop:  dif1y = dif1y + dir
        amnt = amnt + 1
        sna = sna + 1
        snakex(sna) = snf1x
        snakey(sna) = snf1y-(dir*amnt)
        snkind(sna) = 8
        If dif1y <> 0 Then Goto yloop


;-----------------------------------------------------------------


phase2:


; ECKE !!!--------------------------------------------------------

        nf1x=((Stein1x-32)/24)+2 : nf1y=((Stein1y-32)/24)+2

        If nf1x > knoten1x AND knoten2y > knoten1y Then snkind(sna)=3
        If nf1y > knoten1y AND knoten2x > knoten1x Then snkind(sna)=3

        If nf1x < knoten1x AND knoten2y > knoten1y Then snkind(sna)=4
        If nf1y > knoten1y AND knoten2x < knoten1x Then snkind(sna)=4

        If nf1x > knoten1x AND knoten2y < knoten1y Then snkind(sna)=5
        If nf1y < knoten1y AND knoten2x > knoten1x Then snkind(sna)=5

        If nf1x < knoten1x AND knoten2y < knoten1y Then snkind(sna)=6
        If nf1y < knoten1y AND knoten2x < knoten1x Then snkind(sna)=6

;-----------------------------------------------------------------


        If dif2x = 0 AND dif2y = 0 Then Goto phase3

        If dif2x = 0 Then Goto ymoof2

        dir = -1 ; new
        If dif2x < 0 Then dir = 1

        amnt = 0

x2loop: dif2x = dif2x + dir
        amnt = amnt + 1
        sna = sna + 1
        snakex(sna) = knoten1x-(dir*amnt)
        snakey(sna) = knoten1y
        snkind(sna) = 7
        If dif2x <> 0 Then Goto x2loop

        Goto phase3


ymoof2: dir = -1 ; new
        If dif2y < 0 Then dir = 1

        amnt = 0

y2loop: dif2y = dif2y + dir
        amnt = amnt + 1
        sna = sna + 1
        snakex(sna) = knoten1x
        snakey(sna) = knoten1y-(dir*amnt)
        snkind(sna) = 8
        If dif2y <> 0 Then Goto y2loop


;-----------------------------------------------------------------

phase3:

; ECKE !!!--------------------------------------------------------

        nfx=((ttx-32)/24)+2 : nfy=((tty-32)/24)+2

        If nfx > knoten2x AND knoten1y > knoten2y Then snkind(sna)=3
        If nfy > knoten2y AND knoten1x > knoten2x Then snkind(sna)=3

        If nfx < knoten2x AND knoten1y > knoten2y Then snkind(sna)=4
        If nfy > knoten2y AND knoten1x < knoten2x Then snkind(sna)=4

        If nfx > knoten2x AND knoten1y < knoten2y Then snkind(sna)=5
        If nfy < knoten2y AND knoten1x > knoten2x Then snkind(sna)=5

        If nfx < knoten2x AND knoten1y < knoten2y Then snkind(sna)=6
        If nfy < knoten2y AND knoten1x < knoten2x Then snkind(sna)=6

;-----------------------------------------------------------------

        If dif3x = 0 AND dif3y = 0 Then Goto Thatsit

        If dif3x = 0 Then Goto ymoof3

        dir = -1 ;new
        If dif3x < 0 Then dir = 1

        amnt = 0

x3loop: dif3x = dif3x + dir
        amnt = amnt + 1
        sna = sna + 1
        snakex(sna) = knoten2x-(dir*amnt)
        snakey(sna) = knoten2y
        snkind(sna) = 7
        If dif3x <> 0 Then Goto x3loop

        Goto Thatsit



ymoof3: dir = -1 ;new
        If dif3y < 0 Then dir = 1

        amnt = 0

y3loop: dif3y = dif3y + dir
        amnt = amnt + 1
        sna = sna + 1
        snakex(sna) = knoten2x
        snakey(sna) = knoten2y-(dir*amnt)
        snkind(sna) = 8
        If dif3y <> 0 Then Goto y3loop


;-----------------------------------------------------------------


Thatsit: ;//@audit-ok Thatsit

        if Bordermsg > 0 Then Gosub Clearbordermsg

        sna=sna+1
        snakex(sna)= -1 ;stopbyte
        snakey(sna)= -1 ;stopbyte
        snaub = sna

Blizz:
        sna=1
        BlitMode CookieMode


                RGB 17, 15, 0, 0
                RGB 18,  8, 0, 0
                RGB 19,  3, 0, 0


RattleBaby:

        d1x=((snakex(sna)-2)*24+32)
        d1y=((snakey(sna)-2)*24+32)
        numb=snkind(sna)

        Blit numb,d1x,d1y
        sna=sna+1

        If snakex(sna) <> -1 Then Goto RattleBaby ;new

Filld:
        For snwait = 0 to snaub * 4
        If cursorcanmove = 1 Then x = MouseX : y = MouseY
        If cursorcanmove = 0 Then x = mscx : y = mscy 

        Hanfdelay = Hanfdelay + 1 : If Hanfdelay < 2 Then Goto SkiphanfN5
        Hanfdelay = 0 
        If HamfMamf=1 Then Gosub GrowthCon
SkiphanfN5:

        Gosub ZeitSchritt
        If Trigtime = 1 Then Gosub ShowTime

        Gosub AnimCursor 

        VWait
        Next

        sna = 1

Eras:
        d1x=((snakex(sna)-2)*24+32)
        d1y=((snakey(sna)-2)*24+32)

        Boxf d1x,d1y,d1x+boxval,d1y+boxval,0;       Blit 2,d1x,d1y
        sna=sna+1

        If snakex(sna) <> -1 Then Goto Eras ;new

                RGB 17, 14,14,14     ;Farben Mousepointer
                RGB 18,  8, 9,10
                RGB 19,  3, 5, 7




;-----------------------------------------------------------------

.ScorKalk: ;//@todo Scorkalk

        s.l = s.l + 250 + ( (INT(Greif2/4)) + Zeit )  ;Score  .l = longword

        ;Zahlenwert des Steins * Zeit im Verhaeltnis zur
        ;Zeitgeschwindigkeit.

        Gosub ShowScore
        Return

;-----------------------------------------------------------------
;-----------------------------------------------------------------
;-----------------------------------------------------------------
;=================================================================

.LevCon: ;//@audit-ok LevCon

        If Level >249 Then goto LevGet

        NochMehr = 1
        Level = Level + 1
        If Level > LevLock Then LevLock = Level
        If Level > maxlevs Then NochMehr = 0 : LevLock = maxlevs : Return

.LevGet:
        Tutorial = 0
        If Level = 250 Then Restore TutLev1 : Tutorial = 1 : Return
        If Level = 251 Then Restore TutLev2 : Tutorial = 1 : Return
        If Level = 252 Then Restore TutLev3 : Tutorial = 1 : Return
        If Level = 253 Then Restore TutLev4 : Tutorial = 1 : Return
        If Level = 254 Then Restore TutLev5 : Tutorial = 1 : Return
QuickLevget:
        Restore Level1 
        If Level = 1 Then Return 

        ec = Level
FastForward:
        For ee = 1 to 67 : read ffwd : next 
        ec = ec - 1
        If ec > 1 then Goto FastForward
        Return 

;=================================================================

SoNich:  If sfxON=1 Then Sound sfxwrngpos,10      ;Keine Pause wenn 1 Stein angewaehlt ist
         Return

;=================================================================

.Paused: ;//@audit-ok Paused

        If ismarked = 1 Then Goto SoNich ;Kein Pause waehrend Stein
                                         ;angewaehlt (Gehaessigkeit!)
RetrnWise:
        Gosub Clearbordermsg
        Gosub SterneAus 

        If sfxON=1 then Sound sfxpause,10

        Gosub FClean
        Gosub Text4
        Gosub TypeMang
        
        Lastpause = 25
        
        CopyBitMap 0,1

        CurBmp = 0

        Gosub InitPauseBlit

        Gosub SterneAn  

;-----------------------------------------------------------------

PauseLoop:
        Vwait 
        Show CurBmp
        Vwait 

        a$=Inkey$(1)
        JB = Joyb(0)

        Lastpause = Lastpause - 1 : If Lastpause < 0 Then Lastpause = 0

        if a$="" Then goto SkipKey

        If a$="*" Then cheetcount = cheetcount + 1 : RGB 0,0,0,15 : VWait2 : RGB 0,0,0,0
        If Asc(a$)=125 Then cheetcount = cheetcount + 1 : RGB 0,0,0,15 : VWait2 : RGB 0,0,0,0 
        If cheetcount > 39 Then debug = 1 : Goto Cheetet
 
        If UCase$(a$)="M" Then Gosub MusicONOFF
        If UCase$(a$)="W" AND SyCht = 1 Then Goto Wisdom

        If a$=" " AND Lastpause = 0 Then Goto UnPaused
        If UCase$(a$)="P" AND Lastpause = 0 Then Goto UnPaused

SkipKey:
        If JB = 1 AND Lastpause = 0 Then Goto UnPaused

        CurBmp = CurBmp + 1
        If CurBmp > 1 Then CurBmp = 0
        Gosub DisplPause

        Hanfdelay = Hanfdelay + 1 : If Hanfdelay < 1 Then Goto Skiphanf
        Hanfdelay = 0 
        If HamfMamf = 1 Then Gosub GrowthCon

Skiphanf:
        Starslower = Starslower + 1 : If Starslower < 1 Then Goto Skiptabak 
        Starslower = 0 
        Gosub SterneVoran

Skiptabak:
        Goto PauseLoop ;loop

;-----------------------------------------------------------------

UnPaused:                   ;Return from Pause

        Show 0
        Use BitMap 0

        Lastpause = 50

        Gosub SterneOffscreen
        Gosub SterneAus

        Gosub FClean
        Gosub ReBuild
        Gosub ShowTime
        Gosub ShowScore

        RGB 17,14,14,14
        RGB 18,8 ,9 ,10
        RGB 19,3 ,5 ,7

        x=MouseX : y=MouseY 

        InFront 2

        Return

;=================================================================

Cheetet:

        If SyCht = 1 Then Goto PauseLoop

        For k = 15 To 0 Step -1
        RGB 0,k,0,0
        VWait
        Next k

        RGB 0,0,0,0
        SyCht = 1                 ;Cheat in Pause anzeigen
        ScSav = 0                 ;Scoresaving disabled
        cheetcount = 0            ;cheetcount wieder auf 0

        Goto PauseLoop


;=================================================================

InitPauseBlit:
        pypos = 0 ; Huepftabelle f. Paused

        pax=22  ;x-adjustage
        pay=20  ;y-adjustage

        pa1= 40
        pa2= 40
        pa3= 40
        pa4= 40
        pa5= 40
        pa6= 40
        pa7= 40
        pa8= 40
        pa9= 40

        pa1old = pa1
        pa3old = pa3
        pa5old = pa5 
        pa7old = pa7 
        pa9old = pa9 

        Return 

;-----------------------------------------------------------------

.DisplPause: ;//@audit-ok DisplPause

        Use BitMap CurBmp

        boxize = 14
        Boxf  40+pax,pa1old+pay,  40+pax+boxize, pa1old+pay+boxize,0   ; No,x,y
        Boxf  70+pax,pa3old+pay,  70+pax+boxize, pa3old+pay+boxize,0   ; No,x,y
        Boxf 100+pax,pa5old+pay, 100+pax+boxize, pa5old+pay+boxize,0   ; No,x,y
        Boxf 130+pax,pa7old+pay, 130+pax+boxize, pa7old+pay+boxize,0   ; No,x,y
        Boxf 160+pax,pa9old+pay, 160+pax+boxize, pa9old+pay+boxize,0   ; No,x,y

        pa1old = pa1
        pa3old = pa3
        pa5old = pa5 
        pa7old = pa7 
        pa9old = pa9 

        pa9=pa8
        pa8=pa7
        pa7=pa6
        pa6=pa5
        pa5=pa4
        pa4=pa3
        pa3=pa2
        pa2=pa1

        pypos = pypos + 2 : If Ybounc(pypos) = -1 Then pypos = 0 
        pa1 = Ybounc(pypos)

        BlitMode CookieMode

        If SyCht=1 Then Goto SayCheat

SayPause:
        Blit 255,40+pax,pa1+pay    ; No,x,y
        Blit 240,70+pax,pa3+pay    ; No,x,y
        Blit 260,100+pax,pa5+pay   ; No,x,y
        Blit 258,130+pax,pa7+pay   ; No,x,y
        Blit 244,160+pax,pa9+pay   ; No,x,y
        Return

SayCheat: 
        Blit 242,40+pax,pa1+pay    ; No,x,y
        Blit 247,70+pax,pa3+pay    ; No,x,y
        Blit 244,100+pax,pa5+pay   ; No,x,y
        Blit 240,130+pax,pa7+pay   ; No,x,y
        Blit 259,160+pax,pa9+pay   ; No,x,y
        Return


;-----------------------------------------------------------------

Wisdom:                ;While paused be able to see the level
        Gosub UnPaused ;Return from Pause
CloserLook:
        VWait
        a$=Inkey$(1)
        If Asc(a$)=27 Then Goto RetrnWise
        If UCase$(a$)="W" Then Goto RetrnWise
        Goto CloserLook

;=================================================================


.MusicONOFF: ;//@todo MusicONOFF<<<<<

        PauseModule : VWait ; pause/unpause no matter what

        ;sfxON is 1 :

        If sfxON=1 Then sfxON=0 : Return ; just confirm sfxON is off an return

        ;sfxON is 0 :

        sfxON=1   ;report that fx are on now
        Volume 15,64,64,64,64
        Sound sfxselect,9
        Return

;=================================================================
;=================================================================
;=================================================================

.GewonnenEy: ;//@audit-ok GewonnenEy

        Gosub SterneOffscreen

        StopTracker : Vwait

        VWait 10

        Sound sfxwon,1 : VWait : Sound sfxwon,4 ;stereodelay effect

        usfx = sfxON : sfxON = 1

        Gosub Text3
        Gosub TypeMang

        sfxON =  usfx

        Vwait

Winscreenloop:
        Vwait
        JB = Joyb(0)
        a$ = Inkey$(1)

        Hanfdelay = Hanfdelay + 1 : If Hanfdelay < 2 Then Goto SkiphanfN10
        Hanfdelay = 0 
        If HamfMamf=1 Then Gosub GrowthCon
SkiphanfN10:

        Gosub ClickBlink

        If JB <> 1 Then Goto Winscreenloop

        FlushBuffer 5

        JB = 0
        a$ = ""

        Return

;=================================================================

.WellDoneTut: ;//@audit-ok Tutorial Well Done

        Gosub SterneOffscreen

        VWait 10

     if sfxON = 1 Then Sound sfxwon,1 : VWait : Sound sfxwon,4 ;stereodelay effect

        Gosub B_Text16
        Gosub B_TypeMang

        Vwait

Welldoneloop:
        Vwait
        JB = Joyb(0)
        a$ = Inkey$(1)

        Hanfdelay = Hanfdelay + 1 : If Hanfdelay < 2 Then Goto SkiphanfN13
        Hanfdelay = 0 
        If HamfMamf=1 Then Gosub GrowthCon
SkiphanfN13 :

        Gosub ClickBlink

        If JB <> 1 Then Goto Welldoneloop

        FlushBuffer 5

        JB = 0
        a$ = ""

        Return

;=================================================================

;=================================================================
;=================================================================

;=================================================================

ShowTime:
        If Zeit < 0 Then Zeit = 0

        Text$=Str$(Zeit)
        Text$=Text$+Chr$(0)
        tx=(40*7)+1
        ty=(10*9)
        adv=9

        Text$="000"+Text$
        Text$=Right$(Text$,4)

        Goto FTypeMang ;GOTO IS OKAY!

;=================================================================

FShowTime:
        If Zeit < 0 Then Zeit = 0

        Text$=Str$(Zeit)
        Text$=Text$+Chr$(0)
        tx=(40*7)+1+7
        ty=(10*9)
        adv=9

        Text$="000"+Text$
        Text$=Right$(Text$,3) ;<------- difference

        Goto FTypeMang ;GOTO IS OKAY!

;=================================================================

ShowScore:
        If s.l >9999999 Then s.l = 9999999  ; Kein Score uber 9999999 moeglich

        If s.l < 0 Then s.l = 0 

        if o.l = s.l then return
        o.l = s.l 

        Text$=Str$(s.l)
        Text$=Text$+Chr$(0)
        tx=(37*7)+1
        ty=(17*9)-2
        adv=9

        Text$="000000"+Text$
        Text$=Right$(Text$,8)

        Goto FTypeMang ; GOTO IS OKAY!

;=================================================================

ShowStrayed:
        If StrayOld = Strayed then Return
        StrayOld = Strayed 

        Text$=Str$(Strayed)
        Text$=Text$+Chr$(0)
        tx=38*7
        ty=(23*9)-1
        adv=9

        Text$="00"+Text$
        Text$=Right$(Text$,4)

        Goto FTypeMang ; GOTO IS OKAY! 
 
;=================================================================

ShowLevel: ;//@audit-ok ShowLevel
        Levl = Level 
        If Levl > maxlevs then Levl = 0 ; Tutorial-Catch

        Text$=Str$(Levl)
        Text$=Text$+Chr$(0)
        tx=(41*7)
        ty=(2*9)+1
        adv=9

        Text$="0"+Text$
        Text$=Right$(Text$,3)

        Goto FTypeMang ; GOTO IS OKAY!

;=================================================================

;        Gesetze Der Textausgabe!
;        ------------------------

;        -ty wird nicht umgerechnet, d.h. in Bildschirmzeilen
;         angeben (1-256!)

;        -adv gibt an, um wieviel Bdsch-Zeilen pro Textzeile
;         der Cursor nach unten rueckt!

;        -"@" im string bedeutet <CR>!

;        -tx sollte den bereich 5-32 (spielwindow) nicht
;         verlassen! tx wird in Zeichen pro zeile gerechnet (1-45)

;        -fuer die Textausgabe muss der Text in Text$ zurueckkommen.
;         am ende des String muss CHR$(0) vorhanden sein!

;=================================================================

.TypeMang: ;//@audit-ok TypeMang

        BlitMode CookieMode
        strgx=1
ReadMe:
        rty=ty
        rtx=tx*7

        ag = Asc (Mid$(Text$,strgx,1))
        If ag=0 Then Return
        If ag=64 Then ty=ty+adv:tx=5:strgx=strgx+1:Goto ReadMe

        tout=fonttable(ag)
        If tout=193 OR tout=0 Then Goto Space
        Blit tout,rtx,rty
        
        Hanfdelay = Hanfdelay + 1 : If Hanfdelay < 20 Then Goto SkiphanfN6
        Hanfdelay = 0 
        If HamfMamf=1 Then Gosub GrowthCon
SkiphanfN6:

Space:
        tx=tx+1:If tx>=45 Then tx=5:ty=ty+adv
        strgx=strgx+1

        Goto ReadMe

;=================================================================
; Textausgabe fuer 16x16 font
; zuerst B_Text(Nummer) ansprigen dann hier GOSUB
;=================================================================
        
.B_TypeMang: ;//@audit-ok B_TypeMang

        BlitMode CookieMode
        strgx = 1
        kern = 0
        rtx = tx*16 
        rty = ty

B_ReadMe:
        ag = Asc (Mid$(Text$,strgx,1))                        ; fetch char nr in ag
        If ag = 0 Then Return                                 ; terminator

        tout=fonttable(ag)                                    ; check fonttable
        If tout=0 OR tout = 193 Then rtx = rtx + 16 : Goto SubSpace ; space or null (why null?)

        If (ag-65) > 0 AND (ag-65) < 91 Then kern = kerntable (ag-65) ;if ag 65-91 then kern

        if ag > 47 and ag < 58 then kern = kerntable (ag-9) 

        If strgx = 1 Then Goto B_First                        ; if first char, no kerning, no advance
        rtx = rtx + 16                                        ; after second char +16 
        rtx = rtx - kern                                      ; adjust kerning
B_First:       
        Blit (tout+100),rtx,rty                               ; plot char

SubSpace:
        strgx = strgx + 1                                     ; next char
        kern = 0                                              ; reset kerning
        Goto B_ReadMe                                         ; loop until terminator

;-----------------------------------------------------------------

.BB_TypeMang: ; BUFFERED BIGFONT BLIT ;//@audit-ok BB_TypeMang

        FlushBuffer 5 
        BlitMode CookieMode
        strgx = 1
        kern = 0
        rtx = tx*16 
        rty = ty
        for k = 0 to Len(Text$)
        BtextBuf(k)=Asc (Mid$(Text$,k,1)) 
        next 

BB_ReadMe:
        ag = BtextBuf(strgx)                                  ; fetch char nr in ag
        If ag = 0 Then Return                                 ; terminator

        tout=fonttable(ag)                                    ; check fonttable
        If tout=0 OR tout = 193 Then rtx = rtx + 16 : strgx = strgx + 1 : kern = 0 : Goto BB_ReadMe 
                                                              ; space or undefined (0) char

        If (ag-65) > 0 AND (ag-65) < 91 Then kern = kerntable (ag-65) ;if ag 65-91 then kern

        if ag > 47 and ag < 58 then kern = kerntable (ag-9)

        If strgx = 1 Then Goto BB_First                       ; if first char, no kerning, no advance
        rtx = rtx + 16                                        ; after second char +16 
        rtx = rtx - kern                                      ; adjust kerning

BB_First:
        BBlit 5,(tout+100),rtx,rty

        strgx = strgx + 1                                     ; next char
        kern = 0                                              ; reset kerning
        Goto BB_ReadMe                                        ; loop until terminator

;=================================================================
; Nur fuer "schnelle" Zahlenausgabe geeignet!
;=================================================================

.FTypeMang: ;//@audit-ok FTypeMang

        strgx=1
FIt:
        ag = Asc (Mid$(Text$,strgx,1))
        If ag=0 Then Return

        tout=fonttable(ag)
        BlitMode EraseMode
        Blit 193,tx,ty
        BlitMode CookieMode
        Blit tout,tx,ty

        tx=tx+7:strgx=strgx+1
        Goto FIt


;=================================================================


SterneAn: ;//@audit-ok SterneAn
        Spr1Con=2
        Spr2Con=4
        Spr3Con=6
        Spr4Con=8
        Spr5Con=10
        Spr6Con=12
        Spr7Con=14

        If StarsInitialized = 1 Then Goto StarsAreInit

        Gosub RanDom

        Spr1x=Rnx:Spr1y=Rny
        Spr2x=Rnx:Spr2y=Rny
        Spr3x=Rnx:Spr3y=Rny
        Spr4x=Rnx:Spr4y=Rny
        Spr5x=Rnx:Spr5y=Rny
        Spr6x=Rnx:Spr6y=Rny
        Spr7x=Rnx:Spr7y=Rny

        StarsInitialized = 1

        If FirstStartup = 1 Then Goto OnlyMkSprColor

StarsAreInit:
        InFront 8
        ShowSprite Spr1Con,Spr1x,Spr1y,0
        ShowSprite Spr2Con,Spr2x,Spr2y,1
        ShowSprite Spr3Con,Spr3x,Spr3y,2
        ShowSprite Spr4Con,Spr4x,Spr4y,3
        ShowSprite Spr5Con,Spr5x,Spr5y,4
        ShowSprite Spr6Con,Spr6x,Spr6y,5
        ShowSprite Spr7Con,Spr7x,Spr7y,6

OnlyMkSprColor:
        lala=lala+1
        If lala=1 Then Goto set2
        If lala=2 Then Goto set3
        If lala=3 Then Goto set4
        If lala>3 Then lala=0

set1:
        RGB 17, 15,15,13
        RGB 18, 12, 9, 7
        RGB 19,  2, 3, 3
        RGB 21, 15,15,13
        RGB 22, 12, 9, 7
        RGB 23,  2, 3, 3
        RGB 25, 15,15,13
        RGB 26, 12, 9, 7
        RGB 27,  2, 3, 3
        RGB 29, 15,15,13
        RGB 30, 12, 9, 7
        RGB 31,  2, 3, 3
        Return

set2:
        RGB 17, 15, 9, 9
        RGB 18,  9, 5, 1
        RGB 19,  6, 0, 0
        RGB 21, 15, 9, 9
        RGB 22,  9, 5, 1
        RGB 23,  6, 0, 0
        RGB 25, 15, 9, 9
        RGB 26,  9, 5, 1
        RGB 27,  6, 0, 0
        RGB 29, 15, 9, 9
        RGB 30,  9, 5, 1
        RGB 31,  6, 0, 0
        Return

set3:
        RGB 17, 11, 8,15
        RGB 18,  0, 5,11
        RGB 19,  0, 2, 8
        RGB 21, 11, 8,15
        RGB 22,  0, 5,11
        RGB 23,  0, 2, 8
        RGB 25, 11, 8,15
        RGB 26,  0, 5,11
        RGB 27,  0, 2, 8
        RGB 29, 11, 8,15
        RGB 30,  0, 5,11
        RGB 31,  0, 2, 8
        Return

set4:
        RGB 17, 12, 0,15
        RGB 18,  8, 0,13
        RGB 19,  5, 1, 2
        RGB 21, 12, 0,15
        RGB 22,  8, 0,13
        RGB 23,  5, 1, 2
        RGB 25, 12, 0,15
        RGB 26,  8, 0,13
        RGB 27,  5, 1, 2
        RGB 29, 12, 0,15
        RGB 30,  8, 0,13
        RGB 31,  5, 1, 2
        Return

;-----------------------------------------------------------------


        ; blipfx ---------------------

BlipFx:
        blipplay = blipplay + 1 
        treshblip = 5 + Int(Rnd(14))
        If blipplay > treshblip Then blipplay = 0
        If blipplay > 0 Then Return 
        blpsnd = Int(Rnd(3))
        blpchn = Int(Rnd(2))
        If blpchn = 0 Then blpRchn = 1
        If blpchn = 1 Then blpRchn = 4
        Sound (sfxblip1+blpsnd),blpRchn
        Return
        ;-----------------------------


.SterneVoran: ;Contains Blip-FX if music is off ;//@audit-ok SterneVoran

        If sfxON = 1 Then Gosub BlipFx

        InFront 8

        If MouseY > OldMouseY OR MouseY < OldMouseY Then MousRest = 8 : OldMouseY = MouseY
        If MouseX > OldMouseX OR MouseX < OldMouseX Then MousRest = 8 : OldMouseX = MouseX

        MousRest = MousRest - 1

        If MousRest = 0 Then MousRest = 1 : Goto Dorandom

        Goto FolloMi

        ;----------------------------------

Dorandom:
        Spr1Con = Spr1Con+1
        If Spr1Con < 16 Then Goto ConSpr2
        Spr1Con=0
        Gosub RanDom
        Spr1x=Rnx : Spr1y=Rny

ConSpr2:
        Spr2Con = Spr2Con+1
        If Spr2Con < 16 Then Goto ConSpr3
        Spr2Con=0
        Gosub RanDom
        Spr2x=Rnx : Spr2y=Rny

ConSpr3:
        Spr3Con = Spr3Con+1
        If Spr3Con < 16 Then Goto ConSpr4
        Spr3Con=0
        Gosub RanDom
        Spr3x=Rnx : Spr3y=Rny

ConSpr4:
        Spr4Con = Spr4Con+1
        If Spr4Con < 16 Then Goto ConSpr5
        Spr4Con=0
        Gosub RanDom
        Spr4x=Rnx : Spr4y=Rny

ConSpr5:
        Spr5Con = Spr5Con+1
        If Spr5Con < 16 Then Goto ConSpr6
        Spr5Con=0
        Gosub RanDom
        Spr5x=Rnx : Spr5y=Rny

ConSpr6:
        Spr6Con = Spr6Con+1
        If Spr6Con < 16 Then Goto ConSpr7
        Spr6Con=0
        Gosub RanDom
        Spr6x=Rnx : Spr6y=Rny

ConSpr7:
        Spr7Con = Spr7Con+1
        If Spr7Con < 16 Then Goto ConSprs
        Spr7Con=0
        Gosub RanDom
        Spr7x=Rnx : Spr7y=Rny

ConSprs:
        ShowSprite Spr1Con,Spr1x,Spr1y,0
        ShowSprite Spr2Con,Spr2x,Spr2y,1
        ShowSprite Spr3Con,Spr3x,Spr3y,2
        ShowSprite Spr4Con,Spr4x,Spr4y,3
        ShowSprite Spr5Con,Spr5x,Spr5y,4
        ShowSprite Spr6Con,Spr6x,Spr6y,5
        ShowSprite Spr7Con,Spr7x,Spr7y,6

        Return

;-----------------------------------------------------------------

FolloMi:

        Rny=MouseY
        Rnx=MouseX

        Gosub MiniRanDom

        Spr7x=Spr6x:Spr7y=Spr6y
        Spr6x=Spr5x:Spr6y=Spr5y
        Spr5x=Spr4x:Spr5y=Spr4y
        Spr4x=Spr3x:Spr4y=Spr3y
        Spr3x=Spr2x:Spr3y=Spr2y
        Spr2x=Spr1x:Spr2y=Spr1y
        Spr1x=Rnx:Spr1y=Rny

        ShowSprite 1,Spr1x,Spr1y,0
        ShowSprite 2,Spr2x,Spr2y,1
        ShowSprite 3,Spr3x,Spr3y,2
        ShowSprite 4,Spr4x,Spr4y,3
        ShowSprite 5,Spr5x,Spr5y,4
        ShowSprite 6,Spr6x,Spr6y,5
        ShowSprite 7,Spr7x,Spr7y,6

        Return

;-----------------------------------------------------------------

.RanDom: Rnx=Rnx+((Rnd(64))-32)
         Rny=Rny+((Rnd(64))-32)

ClipMouse:

        If MousRest > 1 Then Goto SpecialClip

        If Rnx > 232 Then Rnx= 10
        If Rnx < 10  Then Rnx = 232
        If Rny > 232 Then Rny= 10
        If Rny < 10  Then Rny = 232

        Return

SpecialClip:

        If Rnx > 232 Then Rnx= 232
        If Rnx < 10 Then Rnx = 10
        If Rny > 232 Then Rny= 232
        If Rny < 10 Then Rny = 10

        Return

.MiniRanDom:

        Rnx=Rnx+((Rnd(5))-5)
        Rny=Rny+((Rnd(5))-5)
        Goto SpecialClip


;-----------------------------------------------------------------

SterneAus:

        InFront 0

        RGB 17,0,0,0
        RGB 18,0,0,0
        RGB 19,0,0,0

        RGB 21,0,0,0
        RGB 22,0,0,0
        RGB 23,0,0,0

        RGB 25,0,0,0
        RGB 26,0,0,0
        RGB 27,0,0,0

        RGB 29,0,0,0
        RGB 30,0,0,0
        RGB 31,0,0,0

        Return

;-----------------------------------------------------------------

SterneOffscreen:        ;2020 move stars offscreen

        For rmv = 0 to 7 
        ShowSprite 7,321,257,rmv
        Next rmv 

        Return

;=================================================================
; KOPsZ....  CUM ANd TRY T` SNATCH MY CROPS!

Seed:
        Restore CropRed
        SeedNo=0
        Dim HempRed(18)
Blubba1:
        Read it
        HempRed(SeedNo) = it
        SeedNo = SeedNo + 1
        If it > -1 Then Goto Blubba1

;--------------------------

        Restore CropGrn
        SeedNo=0
        Dim HempGrn(18)
Blubba2:
        Read it
        HempGrn(SeedNo) = it
        SeedNo = SeedNo + 1
        If it > -1 Then Goto Blubba2

;--------------------------

        Restore CropBlu
        SeedNo=0
        Dim HempBlu(18)
Blubba3:
        Read it
        HempBlu(SeedNo) = it
        SeedNo = SeedNo + 1
        If it > -1 Then Goto Blubba3

        Return

;-----------------------------------------------------------------

.DROGUE:
GrowthCon: ;//@audit-ok GrowthCon
        LSD=LSD+1 : If LSD < 2 Then Return
        LSD=0

        Grow=Grow+1
        If HempBlu(Grow) = -1 Then Grow = 0

        BGrow=Grow

        For Smesh = 1 To 31

        RGB Smesh,HempRed(BGrow),HempGrn(BGrow),HempBlu(BGrow)
        BGrow=BGrow+1

        If HempRed(BGrow)=-1 Then BGrow=0

        Next Smesh

        Return

;----------------------------------

EndRush: ;2019 ;//@audit-ok EndRush
        BGrow=0
        LSD=0
        Grow=0
        BGrow=0
        HamfMamf=0

        Gosub Seed

        Gosub set1    ;Restore Sprite Colors

        Use Palette 0 ;Restore Palette


        Return

;=================================================================
;*****************************************************************

; "To find, or not to find! That is the question!"

;*****************************************************************
;=================================================================

; Ein Weg fuehrt vom alten (Stein1n) zum neuen Stein (ttn)

.Pathfinder: ;//@audit-ok Pathfinder
        Gosub FieldIs   ;Aktuellen Spielstand Holen!
        frei = 0        ;Pauschal "kein Weg frei" fuer `tote` Rueckmeldung
        Reverse = 0     ;Reverse auf jeden Fall erstmal aus!

        If Stein1x = ttx AND Stein1y > tty Then Goto VerChekUP ;Weg rauf
        If Stein1x = ttx AND Stein1y < tty Then Goto VerChekDN ;Weg runter
        If Stein1y = tty AND Stein1x > ttx Then Goto HorChekLE ;Weg rechts
        If Stein1y = tty AND Stein1x < ttx Then Goto HorChekRI ;Weg links
        If Stein1x > ttx AND Stein1y > tty Then Goto AlgoLefUP ;Ziel l o
        If Stein1x < ttx AND Stein1y < tty Then Goto AlgoRigDN ;Ziel r u
        If Stein1x < ttx AND Stein1y > tty Then Goto AlgoRigUP ;Ziel r o
        If Stein1x > ttx AND Stein1y < tty Then Goto AlgoLefDN ;Ziel l u

        Bubble = 0
        Return          ; Unmoeglicher Fehler! (2019: LOL)

;=================================================================

VerChekDN:
            Storex = Stein1x : Storey = Stein1y
            Stein1x = ttx : Stein1y = tty
            ttx = Storex : tty = Storey

            Reverse = 1

            Goto Mirror

;=================================================================

VerChekUP:  ;Bei gleicher x-Position, freien Weg aufwaerts zur linken

        Reverse = 0

Mirror: Gosub ECL                        ;Weg nach Links versuchen?
        If frei = 0 Then Goto VerChekUPr ;Nein, also Rechts...

        knoten1y=f1y : knoten2y=fy       ;Aendert sich nicht
NotYet1:
        knoten1x=f1x : knoten2x=fx

        f1y=f1y-1 : If f1y<fy Then Goto VerChekUPr
        If field(f1x,f1y)<>0 Then Goto NextTry

        If f1y=fy Then Goto LeftUpOK
        If f1y>fy Then Goto NotYet1

NextTry:
        f1y=knoten1y
        f1x=f1x-1 : fx=fx-1 : If f1x <= 0 Then Goto VerChekUPr
        If field(f1x,f1y)<>0 OR field(fx,fy)<>0 Goto VerChekUPr
        Goto NotYet1

;-----------------------------------------------------------------

LeftUpOK:
        Bubble = 1
        Return

;=================================================================

VerChekUPr:  ;oder zur rechten Steinseite finden.

        Gosub ECR                        ;Nach Rechts ueberhaupt Moeglich?
        If frei = 0 Then Goto NoWa       ;Nein, also garnicht!

        knoten1y=f1y : knoten2y=fy
NotYet2:
        knoten1x=f1x : knoten2x=fx

        f1y=f1y-1 : If f1y<fy Then Goto NoWa
        If field(f1x,f1y)<>0 Then Goto NextTry2

        If f1y=fy Then Goto RightUpOK
        If f1y>fy Then Goto NotYet2

NextTry2:
        f1y=knoten1y
        f1x=f1x+1 : fx=fx+1 : If f1x >= 11 Then Goto NoWa
        If field(f1x,f1y)<>0 OR field(fx,fy)<>0 Goto NoWa
        Goto NotYet2

;-----------------------------------------------------------------

RightUpOK:
        Bubble = 1
        Return

;-----------------------------------------------------------------

NoWa:   Bubble = 0
        Return

;=================================================================
;*****************************************************************
;=================================================================
; Hor=Horizontal

HorChekRI:
            Storex = Stein1x : Storey = Stein1y
            Stein1x = ttx : Stein1y = tty
            ttx = Storex : tty = Storey

            Reverse = 1

            Goto MirrorB

;=================================================================

HorChekLE:  ;Bei gleicher y-Position, freien Weg oberhalb nach links

        Reverse = 0

MirrorB:
        Gosub ECU                        ;Weg oberhalb versuchen?
        If frei = 0 Then Goto HorChekLEd ;Nein, also unterhalb.

        knoten1x=f1x : knoten2x=fx
NotYet5:
        knoten1y=f1y : knoten2y=fy

        f1x=f1x-1 : If f1x<fx Then Goto HorChekLEd
        If field(f1x,f1y)<>0 Then Goto NextTry5

        If f1x=fx Then Goto HorLEUpOK
        If f1x>fx Then Goto NotYet5

NextTry5:
        f1x=knoten1x
        f1y=f1y-1 : fy=fy-1 : If f1y <= 0 Then Goto HorChekLEd
        If field(f1x,f1y)<>0 OR field(fx,fy)<>0 Goto HorChekLEd
        Goto NotYet5


HorLEUpOK:
        Bubble = 1
        Return

;-----------------------------------------------------------------

HorChekLEd:  ;oder unterhalb finden.

        Gosub ECD                        ;Unterhalb ueberhaupt Moeglich?
        If frei = 0 Then Return          ;Nein, also garnicht!

        knoten1x=f1x : knoten2x=fx
NotYet6:
        knoten1y=f1y : knoten2y=fy

        f1x=f1x-1 : If f1x<fx Then Goto NoWa
        If field(f1x,f1y)<>0 Then Goto NextTry6

        If f1x=fx Then Goto HorLEdwnOK
        If f1x>fx Then Goto NotYet6

NextTry6:
        f1x=knoten1x
        f1y=f1y+1 : fy=fy+1 : If f1y >= 11 Then Goto NoWa
        If field(f1x,f1y)<>0 OR field(fx,fy)<>0 Goto NoWa
        Goto NotYet6

;-----------------------------------------------------------------

HorLEdwnOK:
        Bubble = 1
        Return

;=================================================================
;*****************************************************************
;=================================================================


;
;      o---X
;      |
;      |
;  X---o


AlgoLefDN:
            Storex = Stein1x : Storey = Stein1y
            Stein1x = ttx : Stein1y = tty
            ttx = Storex : tty = Storey

            Reverse = 1

            Goto MirrorC


;=================================================================


AlgoRigUP:  ;Wege fuer y & x - versetzte Steine finden!

        Reverse = 0

MirrorC:

        ;Kreuztest durch die Matrix

        thx = Stein1x : thy = Stein1y
        Gosub SCU
        If frei = 0 Then Goto ARUXb
        f1x = scx : f1y = scy

        thx = ttx : thy = tty
        Gosub SCD
        If frei = 0 Then Goto ARUXb
        fx = scx : fy = scy


;
;         2 X <--- fx,fy
;           |
;     *-----*
;     |
;   1 X <--------- f1x,f1y
;


        snf1x=f1x:snf1y=f1y:snfy=fy:snfx=fx ; Fuer SNAKE!

        knoten1x = f1x : knoten2x = fx

ARUXLOOP:
        knoten1y=f1y

        If f1x=fx Then Goto YESORNO
        f1x = f1x + 1
        If field(f1x,f1y)<>0 Then Goto ARUXTry

        If f1x=fx Then Goto YESORNO
        If f1x>fx Then Goto ARUXb
        Goto ARUXLOOP

ARUXTry:
        f1x = knoten1x
        f1y = f1y - 1 : If f1y < fy Then Goto ARUXb
        If field(f1x,f1y)<>0 Goto ARUXb
        Goto ARUXLOOP

YESORNO:
        knoten2y = f1y
ORNOT:
        If f1y=fy AND f1x=fx Then Goto ARUOK
        f1y = f1y - 1 : If f1y < = 0 Then Goto ARUXb
        If field(f1x,f1y) = 0 Then Goto ORNOT

        f1y = knoten1y
        Goto ARUXTry


;=================================================================


ARUXb:  ;Teil 2 Kreuztest duch die Matrix


        thx = Stein1x : thy = Stein1y
        Gosub SCR
        If frei = 0 Then Goto ARUON
        f1x = scx : f1y = scy

        thx = ttx : thy = tty
        Gosub SCL
        If frei = 0 Then Goto ARUON
        fx = scx : fy = scy


;
;         o----X 2
;         |    fx,fy
;         |
;         |
;   1 X---o
;     f1x,f1y


        snf1x=f1x:snf1y=f1y:snfy=fy:snfx=fx ; Fuer SNAKE!

        knoten1y=f1y : knoten2y=fy

ARUXLOOP2:

        knoten1x = f1x
        If f1y=fy Then Goto YESORNO2
        f1y = f1y - 1
        If field(f1x,f1y)<>0 Then Goto ARUXTry2

        If f1y=fy Then Goto YESORNO2
        If f1y<fy Then Goto ARUON
        Goto ARUXLOOP2

ARUXTry2:
        f1y = knoten1y
        f1x = f1x + 1 : If f1x > fx Then Goto ARUON
        If field(f1x,f1y)<>0 Goto ARUON
        Goto ARUXLOOP2

YESORNO2:
        knoten2x = f1x
ORNOT2:
        If f1x = fx AND f1y = fy Then Goto ARUOK
        f1x = f1x + 1  : If f1x > = 11 Then Goto ARUON
        If field(f1x,f1y) = 0 Then Goto ORNOT2

        f1x = knoten2x
        Goto ARUXTry2



;=================================================================



ARUON:  ;Wege ueber Ausserhalb suchen


        Gosub ECR
        If frei = 0 Then Goto ARU1


        ;Weg Rechts ueber Aussen

NextGxrl:
        f1x = f1x + 1 : If f1x > = 11 Then Goto ARU1
        If field (f1x,f1y) <> 0 Then Goto ARU1
        If f1x = fx Then Goto KONT
        Goto NextGxrl

KONT:

        knoten1y=f1y : knoten2y=fy
Xloop:
        knoten1x=f1x : knoten2x=fx

        f1y=f1y-1 : If f1y<fy Then Goto ARU1
        If field(f1x,f1y)<>0 Then Goto XTry

        If f1y=fy Then Goto ARUOK
        If f1y>fy Then Goto Xloop

XTry:
        f1y=knoten1y
        f1x=f1x+1 : fx=fx+1 : If f1x > = 11 Then Goto ARU1
        If field(f1x,f1y)<>0 OR field(fx,fy)<>0 Goto ARU1
        Goto Xloop


;=================================================================


ARU1:
        Gosub ECU
        If frei = 0 Then Goto ARU2

        ;Weg ueber Oben

NextBxtt:
        f1y = f1y - 1 : If f1y < = 0 Then Goto ARU2
        If field (f1x,f1y) <> 0 Then Goto ARU2
        If f1y = fy Then Goto KONTb
        Goto NextBxtt


KONTb:
        knoten1x=f1x : knoten2x=fx
XLoop2:
        knoten1y=f1y : knoten2y=fy

        f1x=f1x+1 : If f1x>fx Then Goto ARU2
        If field(f1x,f1y)<>0 Then Goto XTry2

        If f1x=fx Then Goto ARUOK
        If f1x<fx Then Goto XLoop2

XTry2:
        f1x=knoten1x
        f1y=f1y-1 : fy=fy-1 : If f1y <= 0 Then Goto ARU2
        If field(f1x,f1y)<>0 OR field(fx,fy)<>0 Goto ARU2
        Goto XLoop2



;=================================================================


ARU2:
        Gosub ECL
        If frei = 0 Then Goto ARU3

        ;Weg Links ueber Aussen

NextDxck:
        fx = fx - 1 : If fx < = 0 Then Goto ARU3
        If field (fx,fy) <> 0 Then Goto ARU3
        If f1x = fx Then Goto KONTc
        Goto NextDxck

KONTc:

        knoten1y=f1y : knoten2y=fy
Xloop3:
        knoten1x=f1x : knoten2x=fx

        f1y=f1y-1 : If f1y<fy Then Goto ARU3
        If field(f1x,f1y)<>0 Then Goto XTry3

        If f1y=fy Then Goto ARUOK
        If f1y>fy Then Goto Xloop3

XTry3:
        f1y=knoten1y
        f1x=f1x-1 : fx=fx-1 : If f1x < = 0 Then Goto ARU3
        If field(f1x,f1y)<>0 OR field(fx,fy)<>0 Goto ARU3
        Goto Xloop3


;=================================================================


ARU3:
        Gosub ECD
        If frei = 0 Then Goto ARUOUT

        ;Weg ueber Unten

NextBoobz:
        fy = fy + 1 : If fy > = 11 Then Goto ARUOUT
        If field (fx,fy) <> 0 Then Goto ARUOUT
        If f1y = fy Then Goto KONTd
        Goto NextBoobz

KONTd:
        knoten1x=f1x : knoten2x=fx
XLoop4:
        knoten1y=f1y : knoten2y=fy

        f1x=f1x+1 : If f1x>fx Then Goto ARUOUT
        If field(f1x,f1y)<>0 Then Goto XTry4

        If f1x=fx Then Goto ARUOK
        If f1x<fx Then Goto XLoop4

XTry4:
        f1x=knoten1x
        f1y=f1y+1 : fy=fy+1 : If f1y > = 11 Then Goto ARUOUT
        If field(f1x,f1y)<>0 OR field(fx,fy)<>0 Goto ARUOUT
        Goto XLoop4


;-----------------------------------------------------------------

ARUOUT: ;Kein Weg moeglich!

        Bubble = 0
        Return


;-----------------------------------------------------------------

ARUOK:  ;Weg frei!

        Bubble = 1
        Return


;=================================================================
;*****************************************************************
;=================================================================


;  X---o
;      |
;      |
;      o---X


AlgoRigDN:
            Storex = Stein1x : Storey = Stein1y
            Stein1x = ttx : Stein1y = tty
            ttx = Storex : tty = Storey

            Reverse = 1

            Goto MirrorD


;=================================================================


AlgoLefUP:  ;Wege fuer y & x - versetzte Steine finden!

        Reverse = 0

MirrorD:

        ;Kreuztest durch die Matrix

        thx = Stein1x : thy = Stein1y
        Gosub SCU
        If frei = 0 Then Goto ALUXb
        f1x = scx : f1y = scy

        thx = ttx : thy = tty
        Gosub SCD
        If frei = 0 Then Goto ALUXb
        fx = scx : fy = scy



;   fx,fy
;  2 X
;    |
;    o----------o
;               |
;               X 1
;              f1x,f1y


        snf1x=f1x:snf1y=f1y:snfy=fy:snfx=fx ; Fuer SNAKE!

        knoten1x = f1x : knoten2x = fx

ALUXLOOP:

        knoten1y=f1y

        If f1x=fx Then Goto NESORNO
        f1x = f1x - 1
        If field(f1x,f1y)<>0 Then Goto ALUXTry

        If f1x=fx Then Goto NESORNO
        If f1x>fx Then Goto ALUXLOOP

ALUXTry:
        f1x = knoten1x
        f1y=f1y-1 : If f1y < fy Then Goto ALUXb
        If field(f1x,f1y)<>0 Goto ALUXb
        Goto ALUXLOOP

NESORNO:
        knoten2y = f1y
NORNOT:
        If f1y=fy AND f1x = fx Then Goto ALUOK
        f1y = f1y - 1
        If field(f1x,f1y) = 0 Then Goto NORNOT

        f1y = knoten1y
        Goto ALUXTry


;=================================================================


ALUXb:  ;Teil 2 Kreuztest duch die Matrix


        thx = Stein1x : thy = Stein1y
        Gosub SCL
        If frei = 0 Then Goto ALUON
        f1x = scx : f1y = scy

        thx = ttx : thy = tty
        Gosub SCR
        If frei = 0 Then Goto ALUON
        fx = scx : fy = scy



;   fx,fy
;  2 X-----o
;          |
;          |
;          |
;          o----X 1
;              f1x,f1y


        snf1x=f1x:snf1y=f1y:snfy=fy:snfx=fx ; Fuer SNAKE!

        knoten1y=f1y : knoten2y=fy

ALUXLOOP2:

        knoten1x = f1x

        If f1y=fy Then Goto NESORNO2
        f1y = f1y - 1
        If field(f1x,f1y)<>0 Then Goto ALUXTry2

        If f1y=fy Then Goto NESORNO2
        If f1y>fy Then Goto ALUXLOOP2

ALUXTry2:
        f1y = knoten1y
        f1x=f1x-1 : If f1x < fx Then Goto ALUON
        If field(f1x,f1y)<>0 Goto ALUON
        Goto ALUXLOOP2

NESORNO2:
        knoten2x = f1x
NORNOT2:
        If f1x = fx AND f1y = fy Then Goto ALUOK
        f1x = f1x - 1
        If field(f1x,f1y) = 0 Then Goto NORNOT2

        f1x = knoten2x
        Goto ALUXTry2



;=================================================================



ALUON:  ;Wege ueber Ausserhalb suchen


        Gosub ECR
        If frei = 0 Then Goto ALU1


ALUCHK:
        fx = fx + 1 : If fx > = 11 Then Goto ALU1
        If field (fx,fy) <> 0 Then Goto ALU1
        If f1x = fx Then Goto ALUKONT
        Goto ALUCHK

ALUKONT:

        knoten1y=f1y : knoten2y=fy
ALULOOP:
        knoten1x=f1x : knoten2x=fx

        f1y = f1y - 1 : If f1y<fy Then Goto ALU1
        If field(f1x,f1y)<>0 Then Goto ALUTRY

        If f1y=fy Then Goto ALUOK
        If f1y>fy Then Goto ALULOOP

ALUTRY:
        f1y=knoten1y
        f1x=f1x+1 : fx=fx+1 : If f1x > = 11 Then Goto ALU1
        If field(f1x,f1y)<>0 OR field(fx,fy)<>0 Goto ALU1
        Goto ALULOOP


;=================================================================


ALU1:
        Gosub ECU
        If frei = 0 Then Goto ALU2


        ;Weg ueber Oben

ALUCHK1:
        f1y = f1y - 1 : If f1y < = 0 Then Goto ALU2
        If field (f1x,f1y) <> 0 Then Goto ALU2
        If f1y = fy Then Goto ALUKONTb
        Goto ALUCHK1


ALUKONTb:
        knoten1x=f1x : knoten2x=fx
ALULOOP1:
        knoten1y=f1y : knoten2y=fy

        f1x=f1x-1 : If f1x<fx Then Goto ALU2
        If field(f1x,f1y)<>0 Then Goto ALUTRY1

        If f1x=fx Then Goto ALUOK
        If f1x>fx Then Goto ALULOOP1

ALUTRY1:
        f1x=knoten1x
        f1y=f1y-1 : fy=fy-1 : If f1y < = 0 Then Goto ALU2
        If field(f1x,f1y)<>0 OR field(fx,fy)<>0 Goto ALU2
        Goto ALULOOP1



;=================================================================


ALU2:
        Gosub ECL
        If frei = 0 Then Goto ALU3


        ;Weg Links ueber Aussen

ALUCHK2:
        f1x = f1x - 1 : If f1x < = 0 Then Goto ALU3
        If field (f1x,f1y) <> 0 Then Goto ALU3
        If f1x = fx Then Goto ALUKONTc
        Goto ALUCHK2

ALUKONTc:

        knoten1y=f1y : knoten2y=fy
ALULOOP2:
        knoten1x=f1x : knoten2x=fx

        f1y=f1y-1 : If f1y<fy Then Goto ALU3
        If field(f1x,f1y)<>0 Then Goto ALUTRY2

        If f1y=fy Then Goto ALUOK
        If f1y>fy Then Goto ALULOOP2

ALUTRY2:
        f1y=knoten1y
        f1x=f1x-1 : fx=fx-1 : If f1x < = 0 Then Goto ALU3
        If field(f1x,f1y)<>0 OR field(fx,fy)<>0 Goto ALU3
        Goto ALULOOP2


;=================================================================


ALU3:
        Gosub ECD
        If frei = 0 Then Goto ALUOUT


        ;Weg ueber Unten

ALUCHK3:

        fy = fy + 1 : If fy > = 11 Then Goto ALUOUT
        If field (fx,fy) <> 0 Then Goto ALUOUT
        If f1y = fy Then Goto ALUKONTd
        Goto ALUCHK3


ALUKONTd:
        knoten1x=f1x : knoten2x=fx
ALULOOP3:
        knoten1y=f1y : knoten2y=fy

        f1x=f1x-1 : If f1x<fx Then Goto ALUOUT
        If field(f1x,f1y)<>0 Then Goto ALUTRY3

        If f1x=fx Then Goto ALUOK
        If f1x>fx Then Goto ALULOOP3

ALUTRY3:
        f1x=knoten1x
        f1y=f1y+1 : fy=fy+1 : If f1y > = 11 Then Goto ALUOUT
        If field(f1x,f1y)<>0 OR field(fx,fy)<>0 Goto ALUOUT
        Goto ALULOOP3


;-----------------------------------------------------------------

ALUOUT: ;Kein Weg moeglich!

        Bubble = 0
        Return

;-----------------------------------------------------------------

ALUOK:  ;Weg frei!

        Bubble = 1
        Return


;=================================================================
;*****************************************************************
;=================================================================


ECL:            ;(Early Check Left) Steine zur Linken frei?


        fx=((ttx-32)/24)+1 : fy=((tty-32)/24)+2
        f1x=((Stein1x-32)/24)+1 : f1y=((Stein1y-32)/24)+2

        frei=(field(fx,fy))+(field(f1x,f1y))

        snf1x=f1x : snf1y=f1y : snfy=fy : snfx=fx ; Fuer SNAKE!

        If frei = 0 Then frei = 1 : Return
        frei = 0
        Return

;=================================================================

ECR:            ;(Early Check Right) Steine zur Rechten frei?


        fx=((ttx-32)/24)+3 : fy=((tty-32)/24)+2
        f1x=((Stein1x-32)/24)+3 : f1y=((Stein1y-32)/24)+2

        frei=field(fx,fy)+field(f1x,f1y)

        snf1x=f1x:snf1y=f1y:snfy=fy:snfx=fx ; Fuer SNAKE!

        If frei = 0 Then frei = 1 : Return
        frei = 0
        Return

;=================================================================

ECU:            ;(Early Check Up)  Steine nach oben frei?


        fx=((ttx-32)/24)+2 : fy=((tty-32)/24)+1
        f1x=((Stein1x-32)/24)+2 : f1y=((Stein1y-32)/24)+1

        frei=field(fx,fy)+field(f1x,f1y)

        snf1x=f1x:snf1y=f1y:snfy=fy:snfx=fx ; Fuer SNAKE!

        If frei = 0 Then frei = 1 : Return
        frei = 0
        Return

;=================================================================

ECD:            ;(Early Check Down) Steine nach unten frei?


        fx=((ttx-32)/24)+2 : fy=((tty-32)/24)+3
        f1x=((Stein1x-32)/24)+2 : f1y=((Stein1y-32)/24)+3

        frei=field(fx,fy)+field(f1x,f1y)

        snf1x=f1x:snf1y=f1y:snfy=fy:snfx=fx ; Fuer SNAKE!

        If frei = 0 Then frei = 1 : Return
        frei = 0
        Return

;=================================================================

SCL:            ;(Single Check Left) Steine zur Linken frei?


        scx=((thx-32)/24)+1 : scy=((thy-32)/24)+2

        frei = field(scx,scy)

        If frei = 0 Then frei = 1 : Return
        frei = 0
        Return

;=================================================================

SCR:            ;(Single Check Right) Steine zur Rechten frei?


        scx=((thx-32)/24)+3 : scy=((thy-32)/24)+2

        frei = field(scx,scy)

        If frei = 0 Then frei = 1 : Return
        frei = 0
        Return

;=================================================================

SCU:            ;(Single Check Up)  Steine nach oben frei?


        scx=((thx-32)/24)+2 : scy=((thy-32)/24)+1

        frei = field(scx,scy)

        If frei = 0 Then frei = 1 : Return
        frei = 0
        Return

;=================================================================

SCD:            ;(Single Check Down) Stein nach unten frei?


        scx=((thx-32)/24)+2 : scy=((thy-32)/24)+3

        frei = field(scx,scy)

        If frei = 0 Then frei = 1 : Return
        frei = 0
        Return


;=================================================================
;*****************************************************************
;     ScoreRoutinen
;*****************************************************************

.SaveScores: ;//@audit-ok SaveScores

        If ScSav=0 Then Return ; wird nur von cheat abgeschaltet

              Gosub Buildcrypt

              If WriteFile (0,loaddir$+"Score.sav")

                    FileOutput 0

                    Print Outdata$

                    CloseFile 0

                    DefaultOutput
                    Use Window 1

                    Return

              EndIf
                  Use Window 1
                  Nprint "": Print" <<< WARNING: SCORES COULD NOT BE SAVED >>>"

                  Return

;=================================================================

Buildcrypt:

              LckTmp$ = "000000"+Str$(LevLock)
              Lock$ = "DEFAULTSCOR"+Right$(LckTmp$,7)
              Outdata$ = Eins$+Zwei$+Drei$+Vier$+Fumf$+Seks$+Siem$+Acht$+Lock$

              Dim calcdb(Len(Outdata$)+1)

              For e = 1 To 9*18
              uux = (Asc(Mid$(Outdata$,e,1)))+21+e+e
              If uux > 255 Then uux = uux - 255
              calcdb(e) = Int(uux)
              Next

              Outdata$=""

              For uvx = 1 To 9*18
              Outdata$=Outdata$+Chr$(calcdb(uvx))
              Next

              Return

;=================================================================


LoadScores:

        If ReadFile (0,loaddir$+"Score.sav")

              FileInput 0

              Eins$ = Edit$(18)
              Zwei$ = Edit$(18)
              Drei$ = Edit$(18)
              Vier$ = Edit$(18)
              Fumf$ = Edit$(18)
              Seks$ = Edit$(18)
              Siem$ = Edit$(18)
              Acht$ = Edit$(18)
              Lock$ = Edit$(18)

              CloseFile 0
              DefaultInput
              VWait 150

              Indata$=Eins$+Zwei$+Drei$+Vier$+Fumf$+Seks$+Siem$+Acht$+Lock$
              
              Dim calcdb(Len(Indata$))
              For e = 1 To (Len(Indata$))
              calcdb(e)=Int(Asc(Mid$(Indata$,e,1)))-21-e-e
              If calcdb(e)<0 Then calcdb(e)=Int(calcdb(e)+255)
              Next

              Eins$ = ""
              Zwei$ = ""
              Drei$ = ""
              Vier$ = ""
              Fumf$ = ""
              Seks$ = ""
              Siem$ = ""
              Acht$ = ""
              Lock$ = ""

              u = 1
              For e = 1 To 18
              Eins$ = Eins$ + Chr$(calcdb(u))
              u = u + 1
              Next
              For e = 1 To 18
              Zwei$ = Zwei$ + Chr$(calcdb(u))
              u = u + 1
              Next
              For e = 1 To 18
              Drei$ = Drei$ + Chr$(calcdb(u))
              u = u + 1
              Next
              For e = 1 To 18
              Vier$ = Vier$ + Chr$(calcdb(u))
              u = u + 1
              Next
              For e = 1 To 18
              Fumf$ = Fumf$ + Chr$(calcdb(u))
              u = u + 1
              Next
              For e = 1 To 18
              Seks$ = Seks$ + Chr$(calcdb(u))
              u = u + 1
              Next
              For e = 1 To 18
              Siem$ = Siem$ + Chr$(calcdb(u))
              u = u + 1
              Next
              For e = 1 To 18
              Acht$ = Acht$ + Chr$(calcdb(u))
              u = u + 1
              Next
              For e = 1 To 18
              Lock$ = Lock$ + Chr$(calcdb(u))
              u = u + 1
              Next

              LevLock = Val(Mid$(Lock$,12,7))

        Else 
              Goto ResetScores
              ;---------------

        EndIf
              Scorefail = 0
              If (Left$(Lock$,3))<>"DEF" Then Scorefail = 1 : Goto ResetScores
 
              Return 

;=================================================================

.ResetScores:

          Use Window 1
          If Scorefail = 1 Then NPrint "": Nprint " Scores need to be rebuilt...!" : VWait 50
          NPrint "": Print " Creating new Highscore file..."

          Gosub DefaultScore
          Gosub Buildcrypt

              Vwait 5

              If WriteFile (0,loaddir$+"Score.sav")

                        FileOutput 0
                        Print Outdata$
                        CloseFile 0
                        Vwait 250
                        Use Window 1

              Else
                        Use Window 1
                        NPrint " >> No disk - no game. Goodbye! <<"
                        Goto DoExit

              Endif
                        Return

;=================================================================

.DefaultScore: ;//@audit-ok DefaultScore

        Eins$="SILVERPEARL0024200"
        Zwei$="TOP TESTERS0012100"
        Drei$="*BONEFISH* 0006000"
        Vier$="SCHNICKHOFF0005000"
        Fumf$="PHREEDH/HMF0004000"
        Seks$="COMMANDER N0003000"
        Siem$="WERTSTAHL  0002000"
        Acht$="HEDNING    0001000"
        Lock$="DEFAULTSCOR0000001"
 ;             12345678901 (11)
        If debug = 1 Then LevLock = maxlevs
        If debug = 0 Then LevLock = Val(Mid$(Lock$,12,7))
        Return


;=================================================================

ScoresToText:  ;Umwandlung der Scores in Textbildschirm

              Text$="*1*  "+Mid$(Eins$,1,11)+"   "+Mid$(Eins$,12,7)+"@"
        Text$=Text$+" 2.  "+Mid$(Zwei$,1,11)+"   "+Mid$(Zwei$,12,7)+"@"
        Text$=Text$+" 3.  "+Mid$(Drei$,1,11)+"   "+Mid$(Drei$,12,7)+"@"
        Text$=Text$+" 4.  "+Mid$(Vier$,1,11)+"   "+Mid$(Vier$,12,7)+"@"
        Text$=Text$+" 5.  "+Mid$(Fumf$,1,11)+"   "+Mid$(Fumf$,12,7)+"@"
        Text$=Text$+" 6.  "+Mid$(Seks$,1,11)+"   "+Mid$(Seks$,12,7)+"@"
        Text$=Text$+" 7.  "+Mid$(Siem$,1,11)+"   "+Mid$(Siem$,12,7)+"@"
        Text$=Text$+" 8.  "+Mid$(Acht$,1,11)+"   "+Mid$(Acht$,12,7)+"@"
        Text$=Text$+Chr$(0)

        tx=5
        ty=(8*9)-9
        adv=17
        Return

;=================================================================

.EditScores: ;//@audit-ok EditScores
        Gosub GetValues    ;Scorefile in Variablen aufteilen
        Gosub ConvertScore ;Aktuellen Score in Variable umwandeln
        If erreicht = 0 Then Return                              ;Testen, ob ein

        IsHiscore = 1 ; Wir haben einen Hiscore und melden das zurueck,
                      ; um den Scorescreen beim Neustart anzuzeigen

        If erreicht = 8 Then Gosub TypeYourName : Goto NewPlatz8 ;neueintrag in die
        If erreicht = 7 Then Gosub TypeYourName : Goto NewPlatz7 ;Scoreliste noetig.
        If erreicht = 6 Then Gosub TypeYourName : Goto NewPlatz6 ;Wenn ja, Namen holen,
        If erreicht = 5 Then Gosub TypeYourName : Goto NewPlatz5 ;Liste neu zusammen-
        If erreicht = 4 Then Gosub TypeYourName : Goto NewPlatz4 ;setzen, und dann
        If erreicht = 3 Then Gosub TypeYourName : Goto NewPlatz3 ;speichern.
        If erreicht = 2 Then Gosub TypeYourName : Goto NewPlatz2 ;
        If erreicht = 1 Then Gosub TypeYourName : Goto NewPlatz1 ;

        Return

;-----------------------------------------------------------------

NewPlatz8:
        Plaz8$=Getippt$
        Acht$=Plaz8$+Scor$
        Return

;-----------------------------------------------------------------

NewPlatz7:
        Plaz7$=Getippt$
        Acht$=Siem$
        Siem$=Plaz7$+Scor$
        Return

;-----------------------------------------------------------------

NewPlatz6:
        Plaz6$=Getippt$
        Acht$=Siem$:Siem$=Seks$
        Seks$=Plaz6$+Scor$
        Return

;-----------------------------------------------------------------

NewPlatz5:
        Plaz5$=Getippt$
        Acht$=Siem$:Siem$=Seks$:Seks$=Fumf$
        Fumf$=Plaz5$+Scor$
        Return

;-----------------------------------------------------------------

NewPlatz4:
        Plaz4$=Getippt$
        Acht$=Siem$:Siem$=Seks$:Seks$=Fumf$
        Fumf$=Vier$
        Vier$=Plaz4$+Scor$
        Return

;-----------------------------------------------------------------

NewPlatz3:
        Plaz3$=Getippt$
        Acht$=Siem$:Siem$=Seks$:Seks$=Fumf$
        Fumf$=Vier$:Vier$=Drei$
        Drei$=Plaz3$+Scor$
        Return

;-----------------------------------------------------------------

NewPlatz2:
        Plaz2$=Getippt$
        Acht$=Siem$:Siem$=Seks$:Seks$=Fumf$
        Fumf$=Vier$:Vier$=Drei$:Drei$=Zwei$
        Zwei$=Plaz2$+Scor$
        Return

;-----------------------------------------------------------------

NewPlatz1:
        Plaz1$=Getippt$
        Acht$=Siem$:Siem$=Seks$:Seks$=Fumf$
        Fumf$=Vier$:Vier$=Drei$:Drei$=Zwei$:Zwei$=Eins$
        Eins$=Plaz1$+Scor$
        Return

;=================================================================


GetValues:
        Plaz1.l=Val(Mid$(Eins$,12,7))
        Plaz2.l=Val(Mid$(Zwei$,12,7))
        Plaz3.l=Val(Mid$(Drei$,12,7))
        Plaz4.l=Val(Mid$(Vier$,12,7))
        Plaz5.l=Val(Mid$(Fumf$,12,7))
        Plaz6.l=Val(Mid$(Seks$,12,7))
        Plaz7.l=Val(Mid$(Siem$,12,7))
        Plaz8.l=Val(Mid$(Acht$,12,7))

        Plaz1$=Mid$(Eins$,1,11)
        Plaz2$=Mid$(Zwei$,1,11)
        Plaz3$=Mid$(Drei$,1,11)
        Plaz4$=Mid$(Vier$,1,11)
        Plaz5$=Mid$(Fumf$,1,11)
        Plaz6$=Mid$(Seks$,1,11)
        Plaz7$=Mid$(Siem$,1,11)
        Plaz8$=Mid$(Acht$,1,11)

        erreicht = 0

        If s.l <= Plaz8.l Then erreicht=0 : Return
        If s.l <= Plaz7.l Then erreicht=8 : Return
        If s.l <= Plaz6.l Then erreicht=7 : Return
        If s.l <= Plaz5.l Then erreicht=6 : Return
        If s.l <= Plaz4.l Then erreicht=5 : Return
        If s.l <= Plaz3.l Then erreicht=4 : Return
        If s.l <= Plaz2.l Then erreicht=3 : Return
        If s.l <= Plaz1.l Then erreicht=2 : Return
        erreicht=1 
        Return

;=================================================================

ConvertScore:
        If s.l >9999999 Then s.l = 9999999
        Scor$="000000"+Str$(s.l)
        Scor$=Right$(Scor$,7)
        Return

;=================================================================

.TypeYourName: ;//@audit-ok TypeYourName

        FlushBuffer 5
        FlushBuffer 4

        Use BitMap 0

        Gosub SterneOffscreen
        usfx = sfxON : sfxON = 1
        Gosub Clean             ;clear all gfx
        sfxON = usfx 
        Gosub B_Text3           ;load tx ty Text$ for NEW SCORE 
        txbase = tx             ;save values
        tybase = ty
        xloc = 13               ;use 13th value in x-movement table for centering
        tx = ((txbase + Xmove(xloc) *0.1 ) *0.58) 
        ty = tybase
        Gosub B_TypeMang        ;actually print *NEW SCORE*

        Gosub Text7             ;print
        Gosub TypeMang          ;small text

        CopyBitMap 0,1

        CurBmp = 1
      
       ;----------------------------------------------

        StopTracker 
        CurSONG = hiscoresong  
        success = StartTracker (CurSONG)  ;trigger new tune
        If sfxON=1 Then StopTracker       ;and pause it if sfx are on

        If sfxON=1 Then Sound sfxwon,1 : VWait : Sound sfxwon,4 : VWait 20 

        ;----------------------------------------------

        Gosub SterneAn          ;turn on stars

        ;--------------------------------

        yadjust=0               ;cursor position y adjustment due to new type-your-name-text position
        Buff=0                  ;cursor position pointer
        Getippt$=""             ;what was entered in score field

MoreM:
        Vwait 
        Show CurBmp
        Vwait 

        ;--- new

        If CurBmp = 0 Then Use BitMap 1
        If CurBmp = 1 Then Use BitMap 0

        tx = ((txbase + Xmove(xloc) *0.1 ) *0.58) 
        ty = tybase
        Boxf (tx*16)-4,ty,((tx*16)+185),(ty+17),0 ;clear space where NEW SCORE was plotted

        xloc = xloc + 1 : if Xmove(xloc) = 255 Then xloc = 0  
 
        tx = ( (txbase + Xmove(xloc) *0.1 ) *0.58) 
        ty = tybase
        Text$="*NEW SCORE*"+Chr$(0)

        Gosub B_TypeMang      
 
        ;--- end new

        Blit 193,84+(Buff*7)+7,146-yadjust ;Cursor darstellen...

        Gosub TypeIn
        Gosub SterneVoran
        Gosub Excite                       ;Sterne flackern
        If HamfMamf=1 Then Gosub GrowthCon ;Evtl Hempmode vorantreiben


        CurBmp = CurBmp + 1 : If CurBmp > 1 Then CurBmp = 0


        If ag<>13 Then Goto MoreM          ;loop

 
 
        ;---------------------------------

        If Getippt$="" Then Getippt$="BLITZWAYS!"
        If UCase$(Getippt$)="SILVERPEARL" Then Getippt$="#HAVE FUN!#" : HamfMamf=1
        If HamfMamf = 1 Then Getippt$ = "#HAVE FUN!#"
        If SyCht = 1 Then Getippt$ = "CHEAT-NOSAVE"

        Getippt$=Getippt$+"            " ; String auffuellen

        Getippt$=Left$(Getippt$,11)

        Gosub SterneAus

        StopTracker : Vwait 
        If sfxON = 1 Then Sound sfxpicked2,10

        VWait 5

        Show 0
        Use Bitmap 0

        tx = ( (txbase + Xmove(xloc) *0.1 ) *0.58) 
        ty = tybase
        Boxf (tx*16)-4,ty,((tx*16)+185),(ty+17),0 ;clear space where NEW SCORE was plotted

        Return

;-----------------------------------------------------------------

Excite:
        If HamfMamf=1 Then Return         ;Wenn Hempmode an ist muessen sterne nicht extra flackern

        url=url+1
        If url>4 OR url<1 Then url=1
        If url=1 Gosub set1
        If url=2 Gosub set2
        If url=3 Gosub set3
        If url=4 Gosub set4
        Return

;-----------------------------------------------------------------

        ;text input routine, used mainly for highscore naming
TypeIn:
        Text$=Inkey$
        If Text$="" Then Return
        If Asc(Text$)=27 Then Getippt$="BLITZWAYS!" : ag=13 : Return  ; ESC = abort
        If Asc(Text$) > 27 AND Asc(Text$) < 32 Then Return  ; Cursor keys = 28,29,30,31
        If Asc(Text$)=167 Then Text$="#" : ag=35 : Goto SpecialCase
        If Asc(Text$)=42 Then Text$="*" : ag=42 :  Goto SpecialCase
        If fonttable(Asc(Text$))=0 Then Return ; catch all non existent symbols

        Text$=UCase$(Text$)
ItsOkay:
        ag = Asc(Text$)

        BlitMode EraseMode
        Use BitMap 0
        Blit 193,84+(Buff*7)+7,146-yadjust
        Use BitMap 1
        Blit 193,84+(Buff*7)+7,146-yadjust

        If ag=0 Then Return
        If ag=8 Then Goto StringLose
        If ag=13 Then Return
 
SpecialCase:
        If Buff > 10 Then Buff=11 : Return 

        BlitMode EraseMode
        Use BitMap 0
        Blit 193,84+(Buff*7)+7,146-yadjust
        Use BitMap 1
        Blit 193,84+(Buff*7)+7,146-yadjust

        Getippt$=Getippt$+Text$
        Buff=Buff+1
        tout=fonttable(ag)
        If tout=0 Then tout = 193

        If ag<>32 Then BlitMode CookieMode
        Blit tout,84+(Buff*7),146-yadjust 
        Use BitMap 0
        Blit tout,84+(Buff*7),146-yadjust 

        If sfxON = 1 Then Sound sfxstoneup,10

        Return

;-----------------------------------------------------------------

StringLose:
        If Buff=0 Then Return
        Getippt$=Left$(Getippt$,Buff-1)
        Buff=Buff-1      

        If sfxON = 1 Then Sound sfxpicked1,10
        Return

;*****************************************************************
;*****************************************************************
; Level solving routines
;*****************************************************************

; you've got to let it all go, neo!

SelfPlay: ;//@todo SELFPLAY

      Gosub SterneOffscreen
      Gosub SterneAus
      cursorcanmove = 0
      fromtut = 0
      Tutorial = 0

      VWait
      If logobuf = 1 Then UnBuffer 4 : logobuf = 0
      Gosub FClean
      VWait

      Zeit = 0             ;Zeit
      Zspeed = Zspeedglobal; 
      Strayed = 0          ;Wie oft verklickt?
      Fokus = 0            ;Arbeitswert Strayed
      Level = 0
      s.l = 0

      Gosub ShowLevel      ; Anzeigen-Init.
      Gosub ShowScore
      Gosub ShowTime
      Strayed = 0 : Fokus = 0 : Gosub ShowStrayed

      Level = Int(RND(8))     ;Startlevel (levget adds+1)
      If Level < 1 Then Level = 1
      If Level > 8 then Level = 8

      Gosub ShowLevel      ; Anzeigen-Init.

      Gosub MatMake        ;contains levget
      Gosub Build

      If sfxON=1 Then Sound sfxlvlover,10   ;Level Complete Sound

      Gosub Announcer2

      ismarked = 0         ;Nix markiert
      noleft = 0           ;Steine vorhanden (1=leer)

      no = 0               ;Mauspointeranim init
      RGB 17, 14,14,14     ;Farben Mousepointer
      RGB 18,  8, 9,10
      RGB 19,  3, 5, 7

      InFront 2            ;Mousepointer vor die Grafik
      mscx = 44            ;Initial x = 44
      mscy = 44            ;Initial y = 44

      x = mscx : y = mscy : Gosub AnimCursor ; Trigger animation + Display Cursor

      Zeit = 99
      Gosub ShowTime

      Gosub Text19
      Gosub TypeMang
      Gosub Text20 
      Gosub TypeMang
      ;-------------------------------
      ; SELFPLAY

      Gosub SP_duplevel
      controlpointer = 0        ;goodlist pointer

SP_loopdo:                        ;calculate list of good moves
        Gosub SP_hint
        If pairlist(0,0)<255 Then Goto SP_loopdo
 
        ;now we have a list of good moves, replay them
        controlpointer = 0        ;goodlist pointer


SP_solve:
        xpg = pairlistgood(controlpointer,0)
        ypg = pairlistgood(controlpointer,1) 

        x = 32+(xpg*24)
        y = 32+(ypg*24)

        Gosub SP_MoveCursor

        Gosub TryToFetch

        for uke = 0 to 15  
        Gosub SP_Checkkey
        If JB = 1 Then s.l = 0 : Gosub FetchfailLite : Goto StartGame
        If SP_Quit = 1 Then s.l = 0 : Goto Exxit
        x = mscx : y = mscy : Gosub AnimCursor : vwait ; Trigger animation + Display Cursor
        Gosub ZeitSchritt
        If Trigtime = 1 Then Gosub ShowTime

        Hanfdelay = Hanfdelay + 1 : If Hanfdelay < 2 Then Goto SkiphanfN1
        Hanfdelay = 0 
        If HamfMamf=1 Then Gosub GrowthCon
SkiphanfN1:
        next 

        xpg = pairlistgood(controlpointer,2)
        ypg = pairlistgood(controlpointer,3) 

        x = 32+(xpg*24)
        y = 32+(ypg*24)

        Gosub SP_MoveCursor

        Gosub TryToFetch

        for uke = 0 to 15  
        Gosub SP_Checkkey
        If JB = 1 Then s.l = 0 : Gosub FetchfailLite : Goto StartGame
        If SP_Quit = 1 Then s.l = 0 : Goto Exxit
        x = mscx : y = mscy : Gosub AnimCursor : vwait ; Trigger animation + Display Cursor
        Gosub ZeitSchritt
        If Trigtime = 1 Then Gosub ShowTime

        Hanfdelay = Hanfdelay + 1 : If Hanfdelay < 2 Then Goto SkiphanfN2
        Hanfdelay = 0 
        If HamfMamf=1 Then Gosub GrowthCon
SkiphanfN2:
        next

        controlpointer = controlpointer + 1
        if pairlistgood(controlpointer,0)<255 then goto SP_solve

       ;------------------------------
       ; Show is over, cursor off, announce end of demo

        Gosub SterneOffscreen
        Gosub SterneAus 

        Gosub FClean 

        Vwait 10

        If sfxON = 1 Then Sound sfxwon,1 : VWait : Sound sfxwon,4 ;stereodelay effect

        Gosub B_Text13
        Gosub B_TypeMang
        Gosub Clearbordermsg

        for uke = 0 to 120  
        Gosub SP_Checkkey
        If JB = 1 Then s.l = 0 : Gosub FetchfailLite : Goto StartGame
        If SP_Quit = 1 Then s.l = 0 : Goto Exxit
        vwait 
        Hanfdelay = Hanfdelay + 1 : If Hanfdelay < 2 Then Goto SkiphanfN7
        Hanfdelay = 0 
        If HamfMamf=1 Then Gosub GrowthCon
SkiphanfN7:
        next

      ;-------------------------------
      ; DONE, EXIT SELFPLAY

EndSelfPlay:

       Gosub Clean     ; Area Loeschen (wg. "dead"-Stones)
       Gosub Clearbordermsg
       Goto IntroRQ

;-----------------------------------------------------------------

SP_MoveCursor: ;//@todo SP_MoveCursor
      xbackup = x
      ybackup = y
      xtarg = x
      ytarg = y

SP_MCloop:

      if mscx > (xtarg+7) then resultx = mscx - (xtarg+7)
      if mscx < (xtarg+7) then resultx = (xtarg+7) - mscx

      if mscy > (ytarg+7) then resulty = mscy - (ytarg+7)
      if mscy < (ytarg+7) then resulty = (ytarg+7) - mscy

      if resultx < 6 and resulty < 6 Then x = xbackup : y = ybackup : Return



      if mscx < (xtarg+7) Then mscx = mscx + 4
      if mscx > (xtarg+7) Then mscx = mscx - 4

      if mscy < (ytarg+7) Then mscy = mscy + 4
      if mscy > (ytarg+7) Then mscy = mscy - 4


        Gosub SP_Checkkey : If JB = 1 Then Gosub FetchfailLite : Goto StartGame
        If SP_Quit = 1 Then Goto Exxit
        vwait : x = mscx : y = mscy : Gosub AnimCursor
        Gosub ZeitSchritt
        If Trigtime = 1 Then Gosub ShowTime
        If HamfMamf=1 Then Gosub GrowthCon

      Goto SP_MCloop

;-----------------------------------------------------------------

SP_Checkkey:

      a$=Inkey$(1) : SP_Quit = 0
      
      If Asc(a$)=27 AND LastESC = 0 Then LastESC = 50 : SP_Quit=1       ;Raus mit ESC
      LastESC = LastESC - 1 : If LastESC < 0 Then LastESC = 0

      If UCase$(a$)="M" Then Gosub MusicONOFF
      If UCase$(a$)="X" Then Gosub EndRush

      JB=Joyb(0)

      Return 
;-----------------------------------------------------------------
;-----------------------------------------------------------------

    ; --- fetch next level ! requires level=0 +++....
SP_duplevel:

    For y = 0 To 7
    For x = 0 To 7
    SPmatrix(x,y) = matrix(x+1,y+1)
    Next
    Next

    Gosub SP_makepairlist
    Return

;-----------------------------------------------------------------

    
SP_makepairlist:        ; --- put pairs into list --------
    plpointer = 0
    x = 0
    y = 0
SP_scanloop:
    xx = x
    yy = y
    a = SPmatrix(x,y)
    ;--- exclusions ---
    If a = 0 Then Goto SP_nexttile ; if source tile is a 0, go on to next tile
    If a = 7 Then Goto SP_nexttile ; wall, do not put into pairlist
    ;------------------
SP_lineloop:
    xx = xx + 1
    If xx = 8 Then xx = 0 : yy = yy + 1 : If yy = 8 Then Goto SP_nexttile
    b = SPmatrix(xx,yy)
    If a <> b Then Goto SP_lineloop

    pairlist(plpointer,0) = x
    pairlist(plpointer,1) = y
    pairlist(plpointer,2) = xx
    pairlist(plpointer,3) = yy
    pairlist(plpointer,4) = a
    plpointer = plpointer + 1

    Goto SP_lineloop

SP_nexttile:
    x = x + 1 : If x = 8 Then x = 0 : y = y + 1
    If y < 8 Then Goto SP_scanloop
    pairlist (plpointer,0) = 255 ;add stopbyte
    Return
    ;---------------------------------

;-----------------------------------------------------------------


;##################################################
;# HINT // AUTO - LEVELSOLVE
;##################################################

    ;------------------------------------------
    ;--- Hint - Auto Tile Removal -------------

SP_hint:
    plpointer = 0

    ; load normal values for vertical access check
    xx1 = pairlist(plpointer,0)
    yy1 = pairlist(plpointer,1)
    xx2 = pairlist(plpointer,2)
    yy2 = pairlist(plpointer,3)

    ;yy1 can only be smaller or equal to yy2
    If yy1 < yy2 Then Gosub SP_verticalcheck : If frei = 1 Then Goto SP_wayfound

    ;if yy1 and yy2 are equal, xx1 and xx2 cannot be equal, so just scan again horizontally
    ;or scan again if the horizontal neighbors were not free/accessible
    ;If yy1 > yy2 <<--- this can never happen due to how we build the pairlist!
    ;If xx1 > xx2 <<--- this can also never happen
    Gosub SP_horizontalcheck : If frei = 0 Then Goto SP_nowayfound

SP_wayfound:
    Gosub SP_removefoundpair ; free is 1 --> remove found pair
    Gosub SP_shrinklist      ; shrink the list by 1
    Gosub SP_removedups      ; remove possible duplicates
    Return

    ;no way found -----------------------------
SP_nowayfound:
    Gosub SP_rotatelist    ; no way was found, just rotate the list and try next entry
    Return

    ;------------------------------------------

SP_verticalcheck:
    frei = 0 : Gosub SP_vcheckL
    If frei = 1 Then Return
    Gosub SP_vcheckR
    Return

    ;-----------------------

SP_vcheckL:
    xa = 1                                                                       ;we start one to the left of the first tile
    ya = 0
SP_vcstepL:
    If xx1-xa > -1 AND SPmatrix(xx1-xa,yy1+ya) = 0 Then Goto SP_vcdownL          ; place is free, try to go down to the left
    If xx1-xa = -1 Then ya = yy2-yy1 : Goto SP_vcmoreLorR                        ; we're in the border, go down directly
    Return                                                                       ; way to left is blocked
SP_vcdownL:
    If xx1-xa=xx2 Then ya = 0 : xa = xa + 1 : Goto SP_vcstepL                    ;
    If SPmatrix(xx1-xa,yy1+ya) = 0 Then ya = ya + 1                              ;try more down
    If SPmatrix(xx1-xa,yy1+ya) > 0 Then ya = 0 : xa = xa + 1 : Goto SP_vcstepL   ;way down blocked, try more left
    If yy1+ya < yy2 Then Goto SP_vcdownL                                         ;until yy1+ya and yy2 are equal
SP_vcmoreLorR:
    If xx1-xa < xx2 Then xa = xa - 1                                             ;try to go right (note: x- because 
                                                                                 ;distance gets smaller)
    If xx1-xa > xx2 Then xa = xa + 1                                             ;try to go left if we came down early
    If xx1-xa = xx2 AND yy1+ya = yy2 Then frei = 1 : Return                      ;and we have arrived
    If SPmatrix(xx1-xa,yy1+ya) = 0 Then Goto SP_vcmoreLorR                       ;not yet, go more right - or left
    Return                                                                       ;path is blocked

    ;----------------------------

SP_vcheckR:
    xa = 1                                                                       ;we start one to the right of the first tile
    ya = 0
SP_vcstepR:
    If xx1+xa < 8 AND SPmatrix(xx1+xa,yy1+ya) = 0 Then Goto SP_vcdownR           ;place is free, try to go down to the right
    If xx1+xa = 8 Then ya = yy2-yy1 : Goto SP_vcmoreRorL                         ;we're in the border, go down directly
    Return                                                                       ;way to the right is blocked
SP_vcdownR:
    If xx1+xa=xx2 Then ya = 0 : xa = xa + 1 : Goto SP_vcstepR                    ;
    If SPmatrix(xx1+xa,yy1+ya) = 0 Then ya = ya + 1                              ;try more down
    If SPmatrix(xx1+xa,yy1+ya) > 0 Then ya = 0 : xa = xa + 1 : Goto SP_vcstepR   ;way down is blocked, go right
    If yy1+ya<yy2 Then Goto SP_vcdownR
SP_vcmoreRorL:
    If xx1+xa < xx2 Then xa = xa + 1                                             ;try to go right if we came down early
    If xx1+xa > xx2 Then xa = xa - 1                                             ;try to go left
    If xx1+xa = xx2 AND yy1+ya = yy2 Then frei = 1 : Return                      ;and we have arrived
    If SPmatrix(xx1+xa,yy1+ya) = 0 Then Goto SP_vcmoreRorL                       ;not yet, go more left - or right
    Return                                                                       ;path is blocked

    ;-----------------------------

SP_horizontalcheck:
    frei = 0 : Gosub SP_hcheckU
    If frei = 1 Then Return
    Gosub SP_hcheckD
    Return

    ;-----------------------------

SP_hcheckU:
    xa = 0                                                                       ;we start one above the first tile
    ya = 1
SP_hcstepU:
    If yy1-ya > -1 AND SPmatrix(xx1+xa,yy1-ya) = 0 Then Goto SP_hcstepLRU        ;place is free, try to go left or right
    If yy1-ya = -1 AND xx2>xx1 Then xa = xx2-xx1 : Goto SP_hcstepUUD             ;we're in the border, go u or d directly
    If yy1-ya = -1 AND xx1>xx2 Then xa = xx1-xx2 : Goto SP_hcstepUUD             ;we're in the border, go u or d directly
    Return                                                                       ;way up is blocked
SP_hcstepLRU:
    If yy1-ya=yy2 Then xa = 0 : ya = ya + 1 : Goto SP_hcstepU
    If xx1>xx2 AND SPmatrix(xx1+xa,yy1-ya) = 0 Then xa = xa - 1                  ;try more left
    If xx1<xx2 AND SPmatrix(xx1+xa,yy1-ya) = 0 Then xa = xa + 1                  ;try more right
    If SPmatrix(xx1+xa,yy1-ya) > 0 Then xa = 0 : ya = ya + 1 : Goto SP_hcstepU   ;way l/r blocked, try more up
    If xx1+xa <> xx2 Then Goto SP_hcstepLRU                                      ;until xx1+xa and xx2 are equal
SP_hcstepUUD:
    If yy1-ya < yy2 Then ya = ya - 1                                             ;try to go further down
    If yy1-ya > yy2 Then ya = ya + 1                                             ;try to go up again
    If yy1-ya = yy2 AND xx1+xa = xx2 Then frei = 1 : Return                      ;and we have arrived
    If SPmatrix(xx1+xa,yy1-ya) = 0 Then Goto SP_hcstepUUD                        ;not yet, go more up - or down
    Return                                                                       ;path is blocked

    ;----------------------------

SP_hcheckD:
    xa = 0                                                                       ;we start one below the first tile
    ya = 1
SP_hcstepD:
    If yy1+ya < 8 AND SPmatrix(xx1+xa,yy1+ya) = 0 Then Goto SP_hcstepLRD         ; place is free, try to go left or right
    If yy1+ya = 8 AND xx2>xx1 Then xa = xx2-xx1 : Goto SP_hcstepDUD              ; we're in the border, go u or d directly
    If yy1+ya = 8 AND xx1>xx2 Then xa = xx1-xx2 : Goto SP_hcstepDUD              ; we're in the border, go u or d directly
    Return                                                                       ; way up is blocked
SP_hcstepLRD:
    If yy1+ya=yy2 Then xa = 0 : ya = ya + 1 : Goto SP_hcstepD ;

    If xx1>xx2 AND SPmatrix(xx1+xa,yy1+ya) = 0 Then xa = xa - 1                  ;try more left
    If xx1<xx2 AND SPmatrix(xx1+xa,yy1+ya) = 0 Then xa = xa + 1                  ;try more right
    If SPmatrix(xx1+xa,yy1+ya) > 0 Then xa = 0 : ya = ya + 1 : Goto SP_hcstepD   ;way l/r blocked, try more down
    If xx1+xa <> xx2 Then Goto SP_hcstepLRD                                      ;until xx1+xa and xx2 are equal
SP_hcstepDUD:
    If yy1+ya < yy2 Then ya = ya + 1                                             ;try to go further down
    If yy1+ya > yy2 Then ya = ya - 1                                             ;try to go up again
    If yy1+ya = yy2 AND xx1+xa = xx2 Then frei = 1 : Return                      ;and we have arrived
    If SPmatrix(xx1+xa,yy1+ya) = 0 Then Goto SP_hcstepDUD                        ;not yet, go more up - or down
    Return                                                                       ;path is blocked

    ;----------------------------

;##################################################
;# HELPERS FOR HINT
;##################################################

    ;rotate list by 1 -------------------------
SP_rotatelist:
    e = 0
SP_RLlistend:
    If pairlist(e,0)<255 Then e=e+1 : Goto SP_RLlistend    ;find end of list
    e0 = pairlist(plpointer,0)                ;backup current value
    e1 = pairlist(plpointer,1)                ;
    e2 = pairlist(plpointer,2)                ;
    e3 = pairlist(plpointer,3)                ;
    e4 = pairlist(plpointer,4)                ;


    Gosub SP_shrinklist                   ;shrink list by 1, deleting current value
    pairlist (e-1,0)=e0                   ;and add it at the now duplicated forelast value
    pairlist (e-1,1)=e1                   ;no need to add the 255 afterwards, it will be kept
    pairlist (e-1,2)=e2                   ;
    pairlist (e-1,3)=e3                   ;
    pairlist (e-1,4)=e4                   ;
    Return                          ;
    ;------------------------------------------

    ; delete current value and shrink list by 1
SP_removefoundpair:
    pairlistgood(controlpointer,0) = pairlist(plpointer,0)  ; copy taken pair to goodlist
    pairlistgood(controlpointer,1) = pairlist(plpointer,1)  ;
    pairlistgood(controlpointer,2) = pairlist(plpointer,2)  ;
    pairlistgood(controlpointer,3) = pairlist(plpointer,3)  ;
    pairlistgood(controlpointer,4) = pairlist(plpointer,4)  ;
    pairlistgood(controlpointer+1,0)=255                    ; add new stop byte to goodlist
    controlpointer=controlpointer+1                         ; advance goodlist pointer
    SPmatrix(xx1,yy1)=0:SPmatrix(xx2,yy2)=0                 ; remove pair from matrix
    Return
    ;------------------------------------------

    ; shrink list by 1 ------------------------
SP_shrinklist:
    a=0
SP_LPshrinklist:
    pairlist(plpointer+a,0)=pairlist(plpointer+1+a,0)   ; shrink list by 1
    pairlist(plpointer+a,1)=pairlist(plpointer+1+a,1)       ;
    pairlist(plpointer+a,2)=pairlist(plpointer+1+a,2)       ;
    pairlist(plpointer+a,3)=pairlist(plpointer+1+a,3)       ;
    pairlist(plpointer+a,4)=pairlist(plpointer+1+a,4)       ;
    If pairlist(plpointer+1+a,0)<255 Then a = a + 1 : Goto SP_LPshrinklist
    Return
    ;------------------------------------------

    ; remove possible duplicates from list ----
SP_removedups:
    ff = 0
SP_LPremovedups:
    If pairlist(ff,0)= 255 Then Return
    If pairlist(ff,0)= xx1 AND pairlist(ff,1)= yy1 Then plpointer = ff : Gosub SP_shrinklist : Goto SP_LPremovedups
    If pairlist(ff,0)= xx2 AND pairlist(ff,1)= yy2 Then plpointer = ff : Gosub SP_shrinklist : Goto SP_LPremovedups
    If pairlist(ff,2)= xx1 AND pairlist(ff,3)= yy1 Then plpointer = ff : Gosub SP_shrinklist : Goto SP_LPremovedups
    If pairlist(ff,2)= xx2 AND pairlist(ff,3)= yy2 Then plpointer = ff : Gosub SP_shrinklist : Goto SP_LPremovedups
    ff=ff+1
    Goto SP_LPremovedups
    ;------------------------------------------



;*****************************************************************
;*****************************************************************
;*****************************************************************
;*****************************************************************
;*****************************************************************
;*****************************************************************
;*****************************************************************
; SMALLTEXT
;*****************************************************************

;        Gesetze Der Textausgabe!
;

;        -ty wird nicht umgerechnet, d.h. in Pixel-Zeilen
;         angeben (1-256!)

;        -adv gibt an, um wieviel Pixel-Zeilen pro Textzeile
;         der Cursor nach unten rueckt!

;        -"@" im string bedeutet <CR>!

;        -tx sollte den bereich 5-32 (spielwindow) nicht
;         verlassen! tx wird in Zeichen pro zeile gerechnet (1-45)

;        -fuer die Textausgabe muss der Text in Text$ zurueckkommen.
;         am ende des String muss CHR$(0) vorhanden sein!

;                     TEXTGRENZE: 27 ZEICHEN

;=================================================================

;                    *-------------------------*
.Text1:       Text$="  #WELCOME TO *BLITZWAYS*  @" ;//@audit-ok Text1 
        Text$=Text$+"   %1996, 2020 WERTSTAHL   @"
        Text$=Text$+"  (P)SILVERPEARL SOFTWARE  @"
        Text$=Text$+"                           @"
        Text$=Text$+"     USE MOUSE TO PLAY     @"
        Text$=Text$+Chr$(0)
        tx=5
        ty=(17*9)-5
        adv=9
        Return

;=================================================================

Text2:;              *-------------------------*
              Text$="* ** *** ********* *** ** *@"
        Text$=Text$+"     G A M E  O V E R !    @"
        Text$=Text$+"                           @"
        Text$=Text$+"      TILES REMAINING:     @"
        Text$=Text$+"           "+Str$(sc)+"@"
        Text$=Text$+"* ** *** ********* *** ** *@"

        Text$=Text$+Chr$(0)
        tx=5
        ty=9*9
        adv=9
        Return

;=================================================================

Text3:;              *-------------------------*
        boxf 67,94+3,  190,112+5,5 ;dk red
        boxf 67,94+3+1,190,112+5-1,4 ; red
        boxf 67,94+3+5,190,112+5-5,5 ;dk red
        boxf 67,94+3+6,190,112+5-6,4 ;red
        boxf 67,94+3+8,190,112+5-8,5 ;dk red
        scorf$=Right$ (("000000"+Str$(s.l)),7)
        Text$=scorf$
        Text$=Text$+Chr$(0)
        tx=5.2
        ty=(6*16)+4       
        Gosub B_TypeMang


              Text$="* ** *** ********* *** ** *@"
        Text$=Text$+"                           @"
        Text$=Text$+" CONGRATULATIONS! YOU HAVE @"
        Text$=Text$+" FOUND  # ALL THE WAYS # ! @"
        Text$=Text$+"           TOTAL:          @"
        Text$=Text$+"                           @"
        Text$=Text$+"                           @"
        Text$=Text$+"                           @"
        Text$=Text$+" # YOUR SENSES ARE SHARP # @"
        Text$=Text$+" AND YOUR MIND IS FOCUSED! @"
        Text$=Text$+"                           @"
        Text$=Text$+"    TRY AGAIN? QUICKER?    @"
        Text$=Text$+"                           @"
        Text$=Text$+"                           @"
        Text$=Text$+"* ** *** ***###*** *** ** *@"


        Text$=Text$+Chr$(0)
        tx=5
        ty=5*9
        adv=10

        Return

;=================================================================
;                    *-------------------------*
Text4:        Text$="## PLEASE COME BACK SOON ##@"
        Text$=Text$+"#                         #@"
        Text$=Text$+"*                         *@"
        Text$=Text$+"#                         #@"
        Text$=Text$+"*                         *@"
        Text$=Text$+"*                         *@"
        Text$=Text$+"                           @"
        Text$=Text$+"                           @"
        Text$=Text$+"*                         *@"
        Text$=Text$+"*                         *@"
        Text$=Text$+"#                         #@"
        Text$=Text$+"*                         *@"
        Text$=Text$+"#                         #@"
        Text$=Text$+"###  PRESS P  OR CLICK  ###@"

        Text$=Text$+Chr$(0)
        tx=5
        ty=5*9
        adv=12
        Return

;=================================================================

;                    *-------------------------*
Text5:        Text$="*#*    >SHOUTS TO:>     *#*@"
        Text$=Text$+"ISK+MK.... ORIGINAL CONCEPT@"
        Text$=Text$+"AMIGA#... FOR THE MEMORIES!@"
        Text$=Text$+"G*P........... EUROPES NR.1@"
        Text$=Text$+"TONI WILEN..... FOR SUPPORT@"
        Text$=Text$+"BLITZ........ FOR THE BASIC@"
        Text$=Text$+"YOU........... FOR PLAYING!@"

        Text$=Text$+Chr$(0)
        tx=5
        ty=(3*9)+5 ; minimum position
        adv=10
        Return

;=================================================================

;                    *-------------------------*
Text6:        Text$="    *KEYBOARD CONTROLS*    @"
        Text$=Text$+"      M .. MUSIC/SFX       @"
        Text$=Text$+"      P .. PAUSE/UNPAUSE   @"
        Text$=Text$+"    RMB .. INTRO PAUSE     @"
        Text$=Text$+"    ESC .. SKIP/QUIT       @"
        If debug = 0 Then adv=25 : ty=(8*9)-3 : Goto Tx6cut

        Text$=Text$+"      X .. END HEMP-MODE   @"
        Text$=Text$+"      U .. UNLOCK +1 LEVEL @"
        Text$=Text$+"L = LVLSKIP   0 = +2K SCORE@"
        Text$=Text$+"40X * IN PAUSE =  TIMECHEAT@"
        adv=18
        ty=(4*9)+4
Tx6cut:
        Text$=Text$+Chr$(0)
        tx=5

        Return

;=================================================================

;                    *-------------------------*
Text7:        Text$="*  PLEASE TYPE YOUR NAME  *@"
        Text$=Text$+"#  FOR THE HALL OF FAME:  #@"
        Text$=Text$+"                           @"
        Text$=Text$+"      >             <      @"
        Text$=Text$+"        -----------        @"
        Text$=Text$+"                           @"
        Text$=Text$+"  PRESS (ENTER) WHEN DONE  @"

        Text$=Text$+Chr$(0)

        tx=5
        ty=(12*9)+5 ;was 12*9 -> difference = yadjust -> typeyourname
        adv=11
        Return


;=================================================================

Text8:;              *-------------------------*
        boxf 67,94+7,190,112+9,5 ;dk red
        boxf 67,94+7+1,190,112+9-1,4 ; red
        boxf 67,94+7+5,190,112+9-5,5 ;dk red
        boxf 67,94+7+6,190,112+9-6,4 ;red
        boxf 67,94+7+8,190,112+9-8,5 ;dk red
        scorf$=Right$ (("000000"+Str$(s.l)),7)
        Text$=scorf$
        Text$=Text$+Chr$(0)
        tx=5.2
        ty=(6*16)+8       
        Gosub B_TypeMang

              Text$="     * ***  *#*  *** *     @"
        Text$=Text$+"                           @"
        Text$=Text$+"           WELL...         @"
        Text$=Text$+"                           @"
        Text$=Text$+"        # TOTAL : #        @"
        Text$=Text$+"                           @"
        Text$=Text$+"                           @"
        Text$=Text$+"                           @"
        Text$=Text$+"                           @"
        Text$=Text$+"                           @"
        Text$=Text$+"                           @"
        Text$=Text$+"       BUT.. WAS IT        @"
        Text$=Text$+"                           @"
        Text$=Text$+"     A NEW HIGHSCORE?      @"
        Text$=Text$+"                           @"
        Text$=Text$+"    * *# *  #*#  * #* *    @"

        Text$=Text$+Chr$(0)
        tx=5
        ty=5*9
        adv=9
        Return

;=================================================================

Text9:;        *-------------------------*
        Text$="     CLICK TO CONTINUE     @"

        Text$=Text$+Chr$(0)
        tx=5
        ty=17*9
        adv=10
        Return

;=================================================================

Text10:;             *-------------------------*
              Text$="          # ?? #           @"
        Text$=Text$+"                           @"
        Text$=Text$+"DO YOU REALLY WANT TO QUIT?@"
        Text$=Text$+"                           @"
        Text$=Text$+"         Y = YES           @"
        Text$=Text$+"                           @"
        Text$=Text$+"         N = NO            @"
        Text$=Text$+"                           @"
        Text$=Text$+"         M = MAYBE         @"

        Text$=Text$+Chr$(0)
        tx=5
        ty=8*9
        adv=10
        Return

;=================================================================

Text11:;       *-------------------------*
        Text$="TIME LEFT  X 50 = @"

        Text$=Text$+Chr$(0)
        tx=7
        ty=11*9
        adv=10
        Return

;=================================================================

Text12:;       *-------------------------* 
        Text$="PENALTY X 1000 = -@"
 
        Text$=Text$+Chr$(0)
        tx=7
        ty=18*9
        adv=10
        Return

;=================================================================

Text13:;       *-------------------------* 
        Text$="NO WAY!@"
        Text$=Text$+Chr$(0)
        tx=15
        ty=27*9+5
        adv=10
        Return

;=================================================================

Text14:;             *-------------------------* 
              Text$="> FEELING LOST? <@"
        Text$=Text$+"       TRY (ESCAPE)!@"
        Text$=Text$+Chr$(0)
        tx=9.8
        ty=0
        adv=10
        boxf 67,0,186,18,0
        Return

;=================================================================

Text15:;       *-------------------------* 
        Text$="#REFOCUSED@"
        Text$=Text$+Chr$(0)
        tx=13
        ty=27*9+5
        adv=10
        Return

;=================================================================

Text16:; 
        Text$="> LEVELS UNLOCKED: "+Str$(LevLock)+" @"
        Text$=Text$+Chr$(0)
        tx=8
        ty=5 * 9 +5
        adv=10
        Return

;=================================================================

Text17:;      *------------*       
        Text$="PLEASE WAIT!"+Chr$(0)
        tx=12.5
        ty=21*9
        adv=10
        Return

;=================================================================

Text18:;       *-------------------------* 
        Text$=">ESC< TO EXIT"
        Text$=Text$+Chr$(0)
        tx=11.6
        ty=27*9+5
        adv=10
        Return

;=================================================================

Text19:;       *-------------------------* 
        Text$=">CLICK TO PLAY<"
        Text$=Text$+Chr$(0)
        tx=10.8
        ty=27*9+5
        adv=10
        Return

;=================================================================

Text20:;       *-------------------------* ;//@audit-ok Text20
        Text$="#GAMEPLAY DEMO#"
        Text$=Text$+Chr$(0)
        tx=10.8
        ty=0
        adv=10
        Return

;=================================================================

TextTut1:;
        ;     Text$="xxxxxxxxxxxxxxxxx@"
              Text$="  THE BOOTCAMP.  @"
        Text$=Text$+Chr$(0)
        Goto TextTutOut

TextTut2:;
        ;     Text$="xxxxxxxxxxxxxxxxx@"
              Text$="WAY OF THE HEART.@"
        Text$=Text$+Chr$(0)
        Goto TextTutOut

TextTut3:;
        ;     Text$="xxxxxxxxxxxxxxxxx@"
              Text$=" OBSTACLE COURSE @"
        Text$=Text$+Chr$(0)
        Goto TextTutOut

TextTut4:;
        ;     Text$="xxxxxxxxxxxxxxxxx@"
              Text$=" SEND THE JOKER! @"
        Text$=Text$+Chr$(0)
        Goto TextTutOut

TextTut5:;
        ;     Text$="xxxxxxxxxxxxxxxxx@"
              Text$=" CAST THE DICES! @"
        Text$=Text$+Chr$(0)
        Goto TextTutOut

TextTutOut:
        tx=9.8
        ty=0
        adv=10
        Return

;=================================================================


;*****************************************************************
; BIGTEXT
;*****************************************************************

.B_Text1:                       ;//@audit-ok B_Text1
        Text$="CLICK TO PLAY"
        Text$=Text$+Chr$(0)
        tx=2.34
        ty=(13*16)-3            ;ty = min 3
        Return

;=================================================================

B_Text2:
        Text$=">HIGHSCORES<"
        Text$=Text$+Chr$(0)
        tx=2.7
        ty=(3*16)-12            ;ty = min 3
        Return

;=================================================================

B_Text3:
        Text$="*NEW SCORE*"
        Text$=Text$+Chr$(0)
        tx=3.2
        ty=(5*16)-4            ;ty = min 3
        Return

;=================================================================

B_Text4:                               
        tx=1.4
        If Level > maxlevs then Text$=" TUTORIAL "+Str$(Level-249): tx=1.8 : Goto tutcut
        LV$="0"+Str$(Level)
        LV$=Right$(LV$,2)
        Text$="  LEVEL "+LV$
tutcut:
        Text$=Text$+Chr$(0)
        ty=7*16            ;ty = min 3
        Return


;=================================================================

B_Text5:
        Text$="YOU MADE IT!"
        Text$=Text$+Chr$(0)
        tx=2.7
        ty=7*16            ;ty = min 3
        Return

;=================================================================

B_Text6:
        Text$="SELECT LEVEL"
        Text$=Text$+Chr$(0)
        tx=2.7
        ty=2*16            ;ty = min 3
        Return

;=================================================================

B_Text7:
        Text$="ENDING GAME"
        Text$=Text$+Chr$(0)
        tx=3.0
        ty=13*16             ;ty = min 3
        Return

;=================================================================

B_Text8:
        Text$="TIME IS UP!"
        Text$=Text$+Chr$(0)
        tx=3.5
        ty=13*16             ;ty = min 3
        Return

;=================================================================

B_Text9:
        Text$="SAVING SCORE"
        Text$=Text$+Chr$(0)
        tx=2.6
        ty=13*16             ;ty = min 3
        Return

;=================================================================

B_Text10:     ;---a--a---;  
        Text$="> PLAY <"
        Text$=Text$+Chr$(0)
        tx=4.28
        ty=(7*16)-4+12        ;ty = min 3
        Return

;=================================================================

B_Text11:     ;---a--a---;
        Text$="TIME BONUS"
        Text$=Text$+Chr$(0)
        tx=3.6
        ty=(5*16)-4             ;ty = min 3
        Return

;=================================================================

B_Text12:     ;---a--a---; 
        Text$="PENALTY!"
        Text$=Text$+Chr$(0)
        tx=4.6
        ty=(9*16)-4             ;ty = min 3
        Return

;=================================================================

B_Text13:                      
        Text$="AMIGA WINS!"
        Text$=Text$+Chr$(0)
        tx=3.6
        ty=(7*16)-12            ;ty = min 3
        Return

;=================================================================

B_Text14:     ;---a--a---;    ;//@audit-ok B_Text14
        Text$="> DEMO <"
        Text$=Text$+Chr$(0)
        tx=4.28
        ty=(7*16)-4+12             ;ty = min 3
        Return


;=================================================================

B_Text15:     ;---a--a---;  
        Text$= "> CLICK <"
        Text$=Text$+Chr$(0)
        tx=4
        ty=(13*16)-3            ;ty = min 3
        Return

;=================================================================

B_Text16:
        Text$="WELL DONE!"
        Text$=Text$+Chr$(0)
        tx=3.6
        ty=7*16            ;ty = min 3
        Return

;=================================================================

;*****************************************************************
;*****************************************************************
;*****************************************************************
;*****************************************************************
; DATA
;*****************************************************************

CropRed: Data 15,15,15,13, 8, 5, 8,11,15,10, 6, 2, 0, 5, 0, 0,15,-1
CropGrn: Data 15,14, 7, 0, 0, 4, 7,11,15,10, 7, 4, 3, 7,10,13,14,-1
CropBlu: Data 15, 6, 0, 0, 0, 5, 8,11,15,15,13,10, 8, 4, 5, 0, 6,-1

;*****************************************************************

Fresh:  Data 40,40,40,41,41,42,43,44,46,48,50,55,60
        Data 70,80,90,100,110,120,130,140,150,160
        Data 160,150,140,130,120,110,100,90,80,70
        Data 60,55,50,48,46,44,43,42,41,41,40,40,40,-1,-1,-1,-1,-1

;*****************************************************************

FontCon:      ;0  ;1  ;2  ;3  ;4  ;5  ;6  ;7  ;8  ;9
        Data      000,000,000,000,000,000,000,001,000  ;8 = DEL, placeholdered 
        Data  000,000,000,001,000,000,000,000,000,000  ;10  13 = ENTER, placeholdered
        Data  000,000,000,000,000,000,000,000,000,000
        Data  000,000,193,167,000,179,000,178,175,000  ;30
        Data  172,173,180,176,170,177,169,174,190,181
        Data  182,183,184,185,186,187,188,189,168,000  ;50
        Data  192,171,191,166,000,140,141,142,143,144  ; A = 65
        Data  145,146,147,148,149,150,151,152,153,154  ;70
        Data  155,156,157,158,159,160,161,162,163,164
        Data  165,166,000,000,000,000,000,140,141,142  ;90

        Data  143,144,145,146,147,148,149,150,151,152
        Data  153,154,155,156,157,158,159,160,161,162  ;110
        Data  163,164,165,166,000,000,000,000,000,000
        Data  000,000,000,000,000,000,000,000,000,000  ;130
        Data  000,000,000,000,000,000,000,000,000,000
        Data  000,000,000,000,000,000,000,000,000,000  ;150
        Data  000,000,000,000,000,000,000,000,000,000
        Data  000,000,000,000,000,000,000,000,000,000  ;170
        Data  000,000,000,000,000,000,000,000,000,000
        Data  000,000,000,000,000,000,000,000,000,000  ;190

        Data  000,000,000,000,000,000,000,000,000,000
        Data  000,000,000,000,000,000,000,000,000,000
        Data  000,000,000,000,000,000,000,000,000,000
        Data  000,000,000,000,000,000,000,000,000,000
        Data  000,000,000,000,000,000,000,000,000,000
        Data  000,000,000,000,000,000,-1

KernCon: ; value is subtracted from x position for bigfont chars
        ;      a   b   c   d   e   f   g   h   i   j
        Data  001,001,001,001,001,002,001,001,010,002
        ;      k   l   m   n   o   p   q   r   s   t
        Data  001,003,001,001,002,001,001,001,001,002
        ;      u   v   w   x   y   z   #   #   #   #
        Data  001,001,001,001,002,001,000,000,000,000
        ;      #   #   #   #   #   #   @   <3  *   0
        Data  000,000,000,000,000,000,000,000,000,003
        ;      1   2   3   4   5   6   7   8   9   >
        Data  007,004,004,004,004,003,005,003,003,000
        ;      <   
        Data  000,255 ; + 250 is terminator



Flashtab:
        Data 5,4,3,2,1,2,6,7,8,12,11,10,9,1,13,14,15,-1

Xmovetab:
        Data 0,0,1,1,1,2,2,3,4,6,8,11,14,17,20,23,26,29,31,32,33,33,34,34,34,35,35
        Data 35,35,34,34,34,33,33,32,31,29,26,23,20,17,14,11,8,6,4,3,2,2,1,1,1,0,0,255


;-----------------------------------------------------------------
        ; Backgroundmaps für Intro
FunMap1: Data  30,00,00,00,00,00,00,30
         Data  00,00,00,00,00,00,00,00
         Data  00,00,00,00,00,00,00,00
         Data  00,00,00,00,00,00,00,00
         Data  00,00,00,00,00,00,00,00
         Data  00,00,00,00,00,00,00,00
         Data  00,00,00,00,00,00,00,00
         Data  30,00,00,00,00,00,00,30
;-----------------------------------------------------------------
FunMap2: Data  08,00,00,00,00,00,00,08
         Data  00,00,00,00,00,00,00,00
         Data  00,00,00,00,00,00,00,00
         Data  00,00,00,00,00,00,00,00
         Data  00,00,00,00,00,00,00,00
         Data  00,00,00,00,00,00,00,00
         Data  00,00,00,00,00,00,00,00
         Data  08,00,00,00,00,00,00,08

;-----------------------------------------------------------------
         ; Aufbaumappe f. Spiralfoermigen Levelaufbau
BMapxy:
         Data  05,04,05,05,04,05,04,04,04,03,05,03,06,03,06,04
         Data  06,05,06,06,05,06,04,06,03,06,03,05,03,04,03,03
         Data  03,02,04,02,05,02,06,02,07,02,07,03,07,04,07,05
         Data  07,06,07,07,06,07,05,07,04,07,03,07,02,07,02,06
         Data  02,05,02,04,02,03,02,02,02,01,03,01,04,01,05,01
         Data  06,01,07,01,08,01,08,02,08,03,08,04,08,05,08,06
         Data  08,07,08,08,07,08,06,08,05,08,04,08,03,08,02,08
         Data  01,08,01,07,01,06,01,05,01,04,01,03,01,02,01,01

;-----------------------------------------------------------------
;-----------------------------------------------------------------
; LEVELS
;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
;Zeitverhaeltnis maximal 999 : 1 !!!  (Zcon=999 und Zeit=1)
;                minimal 1 : 999 !!!  (Zcon=1 und Zeit=999)
;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

; Zspeed --> nun definiert durch Zspeedglobal
; Checksm --> nun immer -123 !

.TutLev1:   
        Data 000,000,000,000,000,000,000,000
        Data 000,000,007,007,007,007,000,000
        Data 000,000,007,025,000,007,000,000
        Data 000,000,007,007,000,007,000,000
        Data 000,000,007,007,000,007,000,000
        Data 000,000,007,025,000,007,000,000
        Data 000,000,007,007,007,007,000,000
        Data 000,000,000,000,000,000,000,000
        Data  99, 50,-123
        ;    Zeit, Zspeed, Checksm

;------------------------------------

.TutLev2:   
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,010,000,000,000,000
        Data 000,000,007,068,007,007,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,000,007,010,068,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data  99, 50,-123
        ;    Zeit, Zspeed, Checksm

;------------------------------------

.TutLev3:   
        Data 000,000,000,000,000,000,000,000
        Data 007,007,000,000,000,000,000,000
        Data 007,033,000,032,000,000,000,000
        Data 007,007,000,032,000,007,007,000
        Data 000,000,000,000,000,007,033,000
        Data 000,000,000,000,000,007,007,000
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data  99, 50,-123
        ;    Zeit, Zspeed, Checksm

;------------------------------------

.TutLev4:   
        Data 000,000,000,000,000,000,000,000
        Data 007,007,007,007,007,007,007,007
        Data 007,008,000,007,007,000,050,007
        Data 007,007,000,007,007,000,007,007
        Data 007,007,000,007,007,000,007,007
        Data 007,030,000,007,007,000,008,007
        Data 007,007,007,007,007,007,007,007
        Data 000,000,000,000,000,000,000,000
        Data  99, 50,-123
        ;    Zeit, Zspeed, Checksm

;------------------------------------

.TutLev5:   
        Data 000,000,000,000,000,000,000,000
        Data 007,026,065,000,000,000,000,000
        Data 007,065,026,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,007,007,007,008,030,007,000
        Data 000,000,000,000,000,000,026,007
        Data 000,018,018,000,000,000,026,007
        Data 000,000,000,000,000,000,007,000
        Data  90, 50,-123
        ;    Zeit, Zspeed, Checksm

;------------------------------------


.Level1: ;//@audit-ok Level1
           ;  1   2   3   4   5   6   7   8  
        Data 000,000,000,000,000,000,000,000 ; 1 -  8
        Data 000,000,000,000,000,000,000,000 ; 9 - 16
        Data 000,000,007,023,007,075,000,000 ;17 - 24
        Data 000,000,018,023,021,022,000,000 ;25 - 32
        Data 000,000,022,021,023,016,000,000 ;33 - 40
        Data 000,000,016,018,023,075,000,000 ;41 - 48
        Data 000,000,000,000,000,000,000,000 ;49 - 56 
        Data 000,000,000,000,000,000,000,000 ;57 - 64
        Data  50, 50,-123                    ;65 - 67
        ;    Zeit, Zspeed, Checksm

;------------------------------------

;.Level2
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,000,085,084,085,087,083,000
        Data 000,000,090,082,083,089,018,000
        Data 000,000,087,083,082,090,000,000
        Data 000,086,084,086,083,089,000,000
        Data 000,000,000,000,018,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data  50, 50,-123
;------------------------------------

;Level3:
        Data 000,000,000,000,000,000,000,000
        Data 000,082,083,084,085,086,087,000
        Data 000,000,000,000,000,088,086,000
        Data 000,000,000,087,018,000,000,000
        Data 000,000,000,018,087,000,000,000
        Data 000,086,088,000,000,000,000,000
        Data 000,087,086,085,084,083,082,000
        Data 000,000,000,000,000,000,000,000
        Data  48, 50,-123

;------------------------------------

;Level4:
        Data 000,000,000,007,007,000,000,000
        Data 000,000,000,013,012,000,000,000
        Data 007,000,073,011,013,010,000,007
        Data 007,000,085,011,025,085,000,007
        Data 007,000,084,025,081,084,000,007
        Data 007,000,073,014,081,010,000,007
        Data 000,000,000,012,014,000,000,000
        Data 000,000,000,007,007,000,000,000
        Data  45, 50,-123

;------------------------------------

;Level5: 
        Data 000,000,000,000,000,000,000,000
        Data 000,087,000,000,091,000,000,000
        Data 000,085,086,018,090,000,000,000
        Data 083,087,090,083,084,000,000,084
        Data 083,000,091,084,083,000,088,084
        Data 000,000,000,000,088,018,085,000
        Data 000,000,000,000,000,086,000,000
        Data 000,000,000,000,000,000,000,000
        Data  45, 50,-123

;------------------------------------

;Level6: 
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,044,052,042,064,043,044,000
        Data 000,043,048,077,047,045,048,000
        Data 000,049,045,047,064,072,077,000
        Data 000,052,042,046,072,046,049,000
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data  40, 50,-123

;------------------------------------

;Level7:
        Data 000,000,000,000,000,000,000,000
        Data 000,069,074,069,074,076,082,000
        Data 000,026,081,092,085,083,026,000
        Data 000,027,077,079,078,082,024,000
        Data 000,000,076,077,079,078,000,000
        Data 000,097,083,085,092,081,106,000
        Data 000,024,106,029,027,097,029,000
        Data 000,000,000,000,000,000,000,000
        Data  55, 50,-123

;------------------------------------

        ;08 pieces_L13
        Data 000,000,000,000,000,000,000,000
        Data 000,071,034,000,062,054,066,000
        Data 000,062,067,000,069,068,071,000
        Data 000,065,054,000,064,059,072,000
        Data 000,067,059,000,065,066,070,000
        Data 000,034,071,000,062,068,069,000
        Data 000,072,070,000,071,062,064,000
        Data 000,000,000,000,000,000,000,000
        Data  90, 50,-123

        ;09 pieces_L14
        Data 000,000,000,000,000,000,000,000
        Data 000,025,021,028,023,000,000,000
        Data 000,026,027,028,030,026,025,000
        Data 000,068,029,016,029,000,024,000
        Data 000,027,068,028,024,000,021,000
        Data 000,000,000,000,000,000,028,000
        Data 000,023,022,022,030,000,008,000
        Data 000,000,000,000,000,000,000,000
        Data  60, 50,-123

        ;10 pieces_L12
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,000,009,058,009,060,000,000
        Data 000,000,057,056,058,061,000,000
        Data 000,000,061,057,060,056,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data  25, 50,-123

        ;11 pieces_M11
        Data 000,000,000,000,000,000,000,000
        Data 000,017,000,024,000,017,007,000
        Data 000,000,022,000,022,000,007,000
        Data 000,021,000,000,000,021,007,000
        Data 000,000,023,000,023,000,007,000
        Data 000,025,000,024,000,025,007,000
        Data 000,007,007,007,007,007,007,000
        Data 000,000,000,000,000,000,000,000
        Data  15, 50,-123

        ;12 pieces_L15
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,038,000,000,039,000,000,000
        Data 000,047,007,041,000,007,047,000
        Data 000,000,000,039,000,000,038,000
        Data 000,000,000,041,000,000,000,000
        Data 000,000,000,007,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data  12, 50,-123

        ;13 pieces_L06
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,000,049,053,038,047,000,000
        Data 000,000,048,051,048,049,000,000
        Data 000,000,052,055,053,055,000,000
        Data 000,000,051,052,038,047,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data  25, 50,-123

        ;14 pieces_M12
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,021,022,023,024,025,046,000
        Data 000,007,007,007,007,007,007,000
        Data 000,007,007,007,007,007,007,000
        Data 000,008,008,008,008,008,008,000
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data  20, 50,-123

        ;15 pieces_M13
        Data 000,000,000,000,000,000,000,000
        Data 000,000,018,010,018,010,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,015,000,000,000
        Data 000,000,000,018,010,021,000,000
        Data 000,000,021,010,018,000,000,000
        Data 000,000,000,015,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data  22, 50,-123

        ;16 pieces_M14
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,071,056,000,000,000
        Data 000,000,000,007,007,000,000,000
        Data 000,000,000,071,056,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,071,007,000,000,007,056,000
        Data 000,007,071,000,000,056,007,000
        Data 000,000,000,000,000,000,000,000
        Data  10, 50,-123

        ;17 pieces_M15
        Data 000,000,000,000,000,000,000,000
        Data 000,055,062,061,063,064,059,000
        Data 000,000,009,051,044,062,000,000
        Data 000,055,046,049,048,009,000,000
        Data 000,064,053,050,044,051,054,000
        Data 000,063,054,000,000,050,000,000
        Data 000,061,059,053,048,049,046,000
        Data 000,000,000,000,000,000,000,000
        Data  75, 50,-123

        ;18 pieces_M16
        Data 000,000,000,000,000,000,000,000
        Data 000,000,028,000,000,027,000,000
        Data 000,000,026,027,028,026,000,000
        Data 000,000,020,044,045,020,000,000
        Data 000,000,045,047,044,047,000,000
        Data 000,000,007,007,007,007,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data  15, 50,-123

        ;19 pieces_M17
        Data 000,000,000,000,000,000,000,000
        Data 000,007,007,000,000,007,007,000
        Data 000,000,000,035,035,028,000,000
        Data 000,000,028,054,068,055,000,000
        Data 000,000,068,030,030,063,000,000
        Data 000,000,063,055,054,000,000,000
        Data 000,008,007,000,000,007,008,000
        Data 000,000,000,000,000,000,000,000
        Data  25, 50,-123

        ;20 pieces_M18
        Data 000,000,000,000,000,000,000,000
        Data 000,025,000,000,000,016,015,000
        Data 000,000,000,000,000,015,021,000
        Data 000,000,000,015,010,000,000,000
        Data 000,000,000,010,015,000,000,000
        Data 000,021,010,000,000,000,000,000
        Data 000,010,016,000,000,000,025,000
        Data 000,000,000,000,000,000,000,000
        Data  25, 50,-123

        ;21 pieces_M19
        Data 000,000,000,000,000,000,000,000
        Data 000,020,018,018,020,019,010,000
        Data 000,019,010,031,032,033,041,000
        Data 000,017,017,007,007,000,000,000
        Data 000,041,033,032,031,000,008,000
        Data 000,007,000,000,000,000,008,000
        Data 000,007,007,007,007,007,007,000
        Data 000,000,000,000,000,000,000,000
        Data  32, 50,-123

        ;22 pieces_M20
        Data 000,000,000,000,000,000,000,000
        Data 000,022,000,000,000,000,008,000
        Data 000,007,007,000,017,007,007,000
        Data 000,007,007,017,019,007,007,000
        Data 000,007,007,019,023,007,007,000
        Data 000,007,007,023,000,007,007,000
        Data 000,021,000,000,000,007,022,000
        Data 000,000,000,000,000,000,000,000
        Data  15, 50,-123

        ;23 pieces_L10
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,000,007,020,007,015,000,000
        Data 000,051,009,020,021,029,014,000
        Data 000,050,029,021,020,011,040,000
        Data 000,051,011,009,020,015,050,000
        Data 000,000,040,064,014,064,000,000
        Data 000,000,000,000,000,000,000,000
        Data  45, 50,-123

        ;24 pieces_L07
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,019,000,000,000,000
        Data 000,000,040,021,040,047,000,000
        Data 000,000,049,016,019,048,000,000
        Data 000,000,047,019,016,049,000,000
        Data 000,000,025,021,025,048,000,000
        Data 000,000,000,019,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data  32, 50,-123

        ;25 pieces_L08
        Data 000,000,000,000,000,000,000,000
        Data 000,045,042,044,043,046,049,000
        Data 000,019,046,011,088,000,000,000
        Data 000,000,089,049,037,088,000,000
        Data 000,000,088,037,049,011,000,000
        Data 000,000,000,089,088,046,019,000
        Data 000,049,046,043,044,042,045,000
        Data 000,000,000,000,000,000,000,000
        Data  42, 50,-123

        ;26 pieces_L09
        Data 000,000,000,000,000,000,000,000
        Data 000,000,022,013,012,021,000,000
        Data 000,084,067,011,013,010,084,000
        Data 000,083,018,011,025,018,083,000
        Data 000,082,068,025,054,068,082,000
        Data 000,081,067,014,054,010,081,000
        Data 000,080,022,012,014,021,080,000
        Data 000,000,000,000,000,000,000,000
        Data  38, 50,-123

        ;27 pieces_L11
        Data 000,000,000,000,000,000,000,000
        Data 000,000,071,048,057,071,000,000
        Data 000,052,070,066,065,070,050,000
        Data 000,000,048,062,064,000,000,000
        Data 000,000,000,057,062,069,000,000
        Data 000,053,070,065,066,070,053,000
        Data 000,000,069,064,052,050,000,000
        Data 000,000,000,000,000,000,000,000
        Data  30, 50,-123

        ;28 pieces_M21
        Data 000,104,104,099,099,090,090,000
        Data 000,068,018,068,018,075,081,000
        Data 000,025,080,091,084,082,025,000
        Data 000,026,076,078,077,081,023,000
        Data 000,104,075,076,078,077,104,000
        Data 000,096,082,084,091,080,105,000
        Data 000,023,105,028,026,096,028,000
        Data 000,000,000,000,000,000,000,000
        Data  81, 50,-123

        ;29 pieces_M22
        Data 000,000,000,000,000,000,000,000
        Data 000,000,021,032,034,019,000,000
        Data 000,029,000,037,038,000,029,000
        Data 000,031,025,000,000,036,034,000
        Data 000,035,036,000,000,025,032,000
        Data 000,024,000,038,037,000,024,000
        Data 000,000,021,031,035,019,000,000
        Data 000,000,000,000,000,000,000,000
        Data  21, 50,-123

        ;30 pieces_M23
        Data 000,000,000,000,000,000,000,000
        Data 000,096,096,018,018,095,095,000
        Data 000,000,000,097,098,000,000,000
        Data 000,093,096,093,094,095,094,000
        Data 000,093,095,094,093,096,094,000
        Data 000,000,000,098,097,000,000,000
        Data 000,097,097,000,000,098,098,000
        Data 000,000,000,000,000,000,000,000
        Data  27, 50,-123

        ;31 pieces_M24
        Data 000,000,000,000,000,000,000,000
        Data 000,078,087,087,088,088,090,000
        Data 000,103,086,018,077,075,018,000
        Data 000,102,086,090,082,082,091,000
        Data 000,103,085,091,077,083,075,000
        Data 000,102,085,084,084,083,078,000
        Data 000,071,067,069,008,069,067,000
        Data 000,000,000,000,000,000,000,000
        Data  42, 50,-123

        ;32 pieces_M25
        Data 000,000,000,000,000,000,000,000
        Data 000,082,097,087,016,020,021,000
        Data 000,078,091,081,089,064,020,000
        Data 000,067,070,078,091,071,077,000
        Data 000,076,073,076,070,072,073,000
        Data 000,077,072,071,067,081,082,000
        Data 000,097,087,089,064,016,021,000
        Data 000,000,000,000,000,000,000,000
        Data  55, 50,-123

        ;33 pieces_S16
        Data 000,000,000,000,000,000,000,000
        Data 000,009,009,013,014,011,012,000
        Data 000,026,023,037,026,018,018,000
        Data 000,022,037,023,037,037,009,000
        Data 000,022,019,038,038,019,009,000
        Data 000,011,012,018,026,023,022,000
        Data 000,013,014,018,022,023,026,000
        Data 000,000,000,000,000,000,000,000
        Data  56, 50,-123
;Level34:
        ;34 pieces_S17
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,011,012,023,023,000,000,000
        Data 000,013,014,010,010,045,010,000
        Data 000,011,012,016,016,010,045,000
        Data 000,013,014,019,019,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data  17, 50,-123

        ;35 pieces_S18
        Data 000,000,000,000,000,000,000,000
        Data 000,011,012,026,018,019,043,000
        Data 000,013,014,049,048,047,043,000
        Data 000,034,041,000,000,050,021,000
        Data 000,021,050,000,000,041,034,000
        Data 000,043,047,048,049,011,012,000
        Data 000,043,019,018,026,013,014,000
        Data 000,000,000,000,000,000,000,000
        Data  33, 50,-123

        ;36 pieces_S19
        Data 000,000,000,000,000,000,000,000
        Data 000,071,068,070,080,082,102,000
        Data 000,018,090,089,086,074,076,000
        Data 000,068,088,018,074,086,066,000
        Data 000,070,087,000,000,088,067,000
        Data 000,080,074,087,090,089,067,000
        Data 000,071,074,082,102,076,066,000
        Data 000,000,000,000,000,000,000,000
        Data  55, 50,-123

        ;37 pieces_S20
        Data 000,000,000,000,000,000,000,000
        Data 000,000,018,024,025,019,000,000
        Data 000,000,007,018,018,007,000,000
        Data 000,000,015,018,000,017,000,000
        Data 000,000,017,018,000,015,000,000
        Data 000,000,007,018,018,007,000,000
        Data 000,000,019,025,024,018,000,000
        Data 000,000,000,000,000,000,000,000
        Data  30, 50,-123

        ;38 pieces_S21
        Data 000,000,000,104,000,018,000,000
        Data 000,027,007,103,000,007,026,000
        Data 000,007,038,026,103,007,007,000
        Data 000,104,018,007,007,029,021,000
        Data 000,038,027,007,007,030,024,000
        Data 000,007,034,000,028,021,007,000
        Data 000,028,007,000,034,007,029,000
        Data 000,000,030,000,024,000,000,000
        Data  43, 50,-123

        ;39 pieces_S22
        Data 000,000,000,000,000,000,000,000
        Data 000,000,000,000,000,067,068,000
        Data 000,000,000,000,065,070,072,000
        Data 000,000,000,073,071,092,000,000
        Data 000,000,092,071,072,000,000,000
        Data 000,073,065,008,000,000,000,000
        Data 000,068,067,000,000,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data  35, 50,-123

        ;40 pieces_S23
        Data 000,000,000,000,000,000,000,000
        Data 000,046,044,074,045,075,036,000
        Data 000,045,018,075,018,074,037,000
        Data 000,047,043,052,043,044,039,000
        Data 000,055,059,008,047,046,040,000
        Data 000,061,056,061,055,052,039,000
        Data 000,037,036,056,059,058,040,000
        Data 000,000,000,000,000,000,000,000
        Data  46, 50,-123

        ;41 pieces_S24
        Data 000,000,000,000,000,000,000,000
        Data 000,012,011,068,016,009,009,000
        Data 000,013,071,007,007,071,013,000
        Data 000,023,007,007,007,007,010,000
        Data 000,017,071,007,007,071,014,000
        Data 000,018,014,008,012,011,068,000
        Data 000,009,009,018,017,023,016,000
        Data 000,000,000,000,000,000,000,000
        Data  40, 50,-123

        ;42 pieces_S25
        Data 000,000,000,000,000,000,000,000
        Data 000,024,021,075,078,065,000,000
        Data 000,022,106,074,073,066,021,000
        Data 000,015,018,024,075,078,066,000
        Data 000,014,016,015,106,074,073,000
        Data 000,013,011,014,018,025,065,000
        Data 000,000,013,011,016,022,025,000
        Data 000,000,000,000,000,000,000,000
        Data  31, 50,-123

        ;43 pieces_S26
        Data 000,000,000,000,000,000,000,000
        Data 000,000,009,020,007,025,000,000
        Data 000,000,017,011,012,100,000,000
        Data 000,000,023,016,025,000,000,000
        Data 000,000,000,032,009,023,000,000
        Data 000,000,100,011,012,017,000,000
        Data 000,000,032,007,020,016,000,000
        Data 000,000,000,000,000,000,000,000
        Data  31, 50,-123

        ;44 pieces_S27
        Data 000,000,000,000,000,000,000,000
        Data 000,015,007,018,018,007,015,000
        Data 000,007,007,007,007,007,007,000
        Data 000,062,007,063,068,000,068,000
        Data 000,062,007,068,063,000,068,000
        Data 000,007,007,000,000,007,007,000
        Data 000,062,007,063,063,007,062,000
        Data 000,000,000,000,000,000,000,000
        Data  18, 50,-123

        ;45 pieces_S28
        Data 000,000,000,000,000,000,000,000
        Data 000,007,007,007,007,007,007,000
        Data 000,007,010,000,011,012,007,000
        Data 000,007,067,000,000,014,007,000
        Data 000,007,011,012,000,000,007,000
        Data 000,007,067,014,000,010,007,000
        Data 000,007,007,007,007,007,007,000
        Data 000,000,000,000,000,000,000,000
        Data  8, 50,-123

        ;46 pieces_S29
        Data 000,000,000,000,000,000,000,000
        Data 000,051,000,000,000,000,051,000
        Data 000,021,007,018,018,007,008,000
        Data 000,000,022,056,051,021,000,000
        Data 000,000,021,051,056,022,000,000
        Data 000,008,007,018,018,007,021,000
        Data 000,056,000,000,000,000,056,000
        Data 000,000,000,000,000,000,000,000
        Data  25, 50,-123

        ;47 pieces_S30
        Data 000,000,000,000,000,000,000,000
        Data 000,000,028,007,007,026,000,000
        Data 000,000,021,019,020,021,000,000
        Data 000,000,000,041,041,000,000,000
        Data 000,000,000,020,019,000,000,000
        Data 000,000,000,000,000,000,000,000
        Data 000,000,007,026,028,007,000,000
        Data 000,000,008,018,018,008,000,000
        Data  29, 50,-123

        ;48 pieces_S31
        Data 000,000,000,000,000,000,000,000
        Data 000,071,059,071,081,077,065,000
        Data 000,059,030,071,077,060,071,000
        Data 000,081,079,030,078,060,069,000
        Data 000,079,061,078,067,069,062,000
        Data 000,061,072,008,068,067,092,000
        Data 000,072,049,068,062,092,065,000
        Data 000,000,000,000,000,000,000,000
        Data  33, 50,-123

        ;49 pieces_S32
        Data 000,000,000,000,000,000,000,000
        Data 000,080,073,107,071,077,080,000
        Data 000,062,070,070,070,070,062,000
        Data 000,065,070,070,039,070,065,000
        Data 000,066,070,039,070,070,066,000
        Data 000,067,070,070,070,070,067,000
        Data 000,068,073,107,071,077,068,000
        Data 000,000,000,000,000,000,000,000
        Data  39, 50,-123

        ;50 pieces_S33
        Data 000,000,000,000,000,000,000,000
        Data 000,008,007,000,000,007,008,000
        Data 000,007,007,000,000,007,007,000
        Data 000,000,000,031,035,000,000,000
        Data 000,000,000,057,046,000,000,000
        Data 000,007,007,000,000,007,007,000
        Data 000,008,007,000,000,007,008,000
        Data 000,000,000,000,000,000,000,000
        Data  7, 50,-123

        ;51 pieces_S34
        Data 000,000,000,000,000,000,000,000
        Data 000,050,035,033,037,046,050,000
        Data 000,040,040,035,108,050,043,000
        Data 000,038,038,033,050,052,108,000
        Data 000,109,037,050,109,069,053,000
        Data 000,046,050,053,059,067,059,000
        Data 000,050,043,052,067,050,069,000
        Data 000,000,000,000,000,000,000,000
        Data  67, 50,-123

        ;52 pieces_S35
        Data 000,000,000,000,000,000,000,000
        Data 024,008,013,082,105,091,011,025
        Data 025,099,082,099,035,040,013,027
        Data 026,105,091,035,014,028,040,028
        Data 027,009,023,014,009,031,028,030
        Data 029,019,015,109,043,033,031,031
        Data 030,023,019,015,109,043,033,032
        Data 031,032,033,029,028,026,024,033
        Data  55, 50,-123

;=================================================================
; Comments: ;//@audit-ok Comments
;             0.5-    start: sep-1996  
; Blitz Ways V0.97    (c)1996 by WS ("aGe", back then) 
;                     code, gfx & music by Sebastian I. Hartmann
;
;                     based on the game "stone" by I.S. K. & M. K.,
;                     originally written in assembly,
;                     which has never been finished.
;
;            V1.0b    sourcecode de.trashed and de.pastaed
;                     ("spagehtti-code") on: 22.2.1997
;                     thanks to lh for printing
;                     all that source-code.
;
;            V1.2     Sourcecode minor fixes
;                     Bugfix in Antihack Routine
;                     Finish+Implementation von Levels
;                     aus der Mobiltelefon-Version
;
;            V1.21    8-2019 - Revived from the dead
;
;            V1.24    12-2019 - from now on edited in VisualStudioCode
;
;            V1.25    2-2020 - credits cleaned up
;
;            V1.30RC1 14-06-2020 -- finally bugfree and fully functional 
;
;   --- Ablauftrennung (auch direkte Subroutinen)
;   === Routinentrennung
;
;   ===
;   *** Programmabschnitt-trennungen
;   ===
;
;=================================================================

; see changelog.txt for detailed progress

;-----------------------------------------------------------------

                   ;/\/\/\   E - O - F   /\/\/\

;EOF
